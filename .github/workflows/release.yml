name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Get previous version
        id: get_prev_version
        run: |
          PREV_VERSION=$(git tag --sort=-v:refname | grep -v "^${GITHUB_REF#refs/tags/}$" | head -n 1)
          echo "PREV_VERSION=$PREV_VERSION" >> $GITHUB_ENV

      - name: Extract changelog
        id: get_changelog
        run: |
          # 获取最新版本的更新日志内容
          CHANGELOG=$(awk '/^### v'"${GITHUB_REF#refs/tags/}"'/{p=1;next}/^### v/{p=0}p' CHANGELOG.md)
          # 移除开头的空行
          CHANGELOG=$(echo "$CHANGELOG" | sed '/./,$!d')
          # 移除末尾的空行
          CHANGELOG=$(echo "$CHANGELOG" | sed -e :a -e '/^\n*$/{$d;N;ba' -e '}')
          # 添加 changelog 链接
          CHANGELOG="$CHANGELOG\n\n**Full Changelog**: https://github.com/mustakshif/Asri/compare/$PREV_VERSION...${GITHUB_REF#refs/tags/}"
          # 输出到环境变量
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
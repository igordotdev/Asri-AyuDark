@use "sass:string";
@use "sass:selector";

// functions ————————————————————
@function getRgb($color) {
    @return red($color), green($color), blue($color);
}

@function pickThemeColor($theme-map, $color-key, $opacity: 1) {
    @return change-color(map-get($theme-map , $color-key), $alpha: $opacity);
}

@function negateForRTL($value) {
    @return calc(var(--global-negate-factor, 1) * #{$value});
}

// common mixins ———————————————————————
@mixin font-family {
    --b3-font-family: system-ui, ui-sans-serif, -apple-system, BlinkMacSystemFont, "SF Pro Text", "SF Pro Icons", "Helvetica Neue", "Luxi Sans", "DejaVu Sans", "PingFang SC", "Segoe UI", "Microsoft Yahei", "Hiragino Sans GB", sans-serif, "Segoe UI Emoji", "Noto Color Emoji", "Segoe UI Symbol", "Android Emoji", "EmojiSymbols";

    --b3-font-family-code: SF Mono, "JetBrains Mono", JetBrainsMono-Regular, Menlo, mononoki, Consolas, "Liberation Mono", Courier, "Apple Color Emoji", "Segoe UI Emoji", "Noto Color Emoji", "Segoe UI Symbol", "Android Emoji", "EmojiSymbols", var(--b3-font-family), monospace;

    // --b3-font-family-graph: mononoki;

    // --b3-font-family-emoji: "Segoe UI Emoji", "Segoe UI Symbol", "Segoe UI", "Apple Color Emoji", "Twemoji Mozilla", "Noto Color Emoji", "Android Emoji";

    // --b3-font-family-math: KaTeX_Math;
}

@mixin bg-blur($blur-radius: 40px, $saturate-value: 3, $brightness-light: 1.1, $brightness-dark: calc(2 - $brightness-light)) {
    backdrop-filter: blur($blur-radius) saturate($saturate-value) brightness($brightness-light);

    [data-theme-mode="dark"] & {
        backdrop-filter: blur($blur-radius) saturate($saturate-value) brightness($brightness-dark);
    }
}

//————————————————————————————————————
@mixin menu-shadow ($shadow-clr-light: #000, $shadow-clr-dark: $shadow-clr-light, $opacity-light: 0.1, $opacity-dark: 0.3, $border-light: 1px, $border-dark: 0.5px) {
    @if type-of($shadow-clr-light) !=color {
        box-shadow: 0 0 0 $border-light rgb(from #{$shadow-clr-light} r g b / calc($opacity-light / 2)),
        0px 13px 25px -2px rgb(from #{$shadow-clr-light} r g b / calc($opacity-light / 2)),
        0px 0px 10px 0px rgb(from #{$shadow-clr-light} r g b / calc($opacity-light / 2));
    }

    @else {
        box-shadow: 0 0 0 $border-light change-color($shadow-clr-light, $alpha: calc($opacity-light / 2)),
            0px 13px 25px -2px change-color($shadow-clr-light, $alpha: calc($opacity-light / 2)),
            0px 0px 10px 0px change-color($shadow-clr-light, $alpha: calc($opacity-light / 2));
    }

    @include darkmode-counterpart {
        @if type-of($shadow-clr-dark) !=color {
            box-shadow: 0 0 0 $border-dark rgb(from #{$shadow-clr-dark} r g b / 1),
            0px 13px 25px -2px rgb(from #{$shadow-clr-dark} r g b / $opacity-dark),
            0px 0px 10px 0px rgb(from #{$shadow-clr-dark} r g b / calc($opacity-dark / 2));
        }

        @else {
            box-shadow: 0 0 0 $border-dark change-color($shadow-clr-dark, $alpha: 1),
                0px 13px 25px -2px change-color($shadow-clr-dark, $alpha: $opacity-dark),
                0px 0px 10px 0px change-color($shadow-clr-dark, $alpha: calc($opacity-dark / 2));
        }
    }
}

@mixin dialog-shadow ($shadow-clr-light: #000, $shadow-clr-dark: $shadow-clr-light, $opacity-light: 0.1, $opacity-dark: 0.3) {
    box-shadow: 0px 10px 15px -3px change-color($shadow-clr-light, $alpha: $opacity-light * 0.7),
        0px 24px 40px 9px change-color($shadow-clr-light, $alpha: $opacity-light * 0.5),
        0 66px 40px -32px change-color($shadow-clr-light, $alpha: $opacity-light);

    @include darkmode-counterpart {
        box-shadow: 0 0 0 1px #000,
            0px 10px 15px -3px change-color($shadow-clr-dark, $alpha: $opacity-dark * 0.7),
            0px 24px 40px 9px change-color($shadow-clr-dark, $alpha: $opacity-dark * 0.5),
            0 66px 40px -32px change-color($shadow-clr-dark, $alpha: $opacity-dark);
    }
}

@mixin tooltip-shadow ($shadow-clr-light: #000, $shadow-clr-dark: $shadow-clr-light, $opacity-light: 0.1, $opacity-dark: 0.3) {
    box-shadow: 0 0 0px 1px change-color($shadow-clr-light, $alpha: $opacity-light), 0px 2px 6px 0px change-color($shadow-clr-light, $alpha: $opacity-light);

    @include darkmode-counterpart {
        box-shadow: 0 0 0 0.5px #000, 0px 2px 6px 0px change-color($shadow-clr-dark, $alpha: $opacity-dark);
    }
}

@mixin components-shadow {
    --shadow-clr: rgba(0, 0, 0, .1);
    $darkmode-highlight: 0 1.5px 0 -1px inset #fff;
    $box-shadow: 0 1px 1px 0 var(--shadow-clr),
        0 5px 5px -2px var(--shadow-clr),
        0px 6px 10px -3px var(--shadow-clr),
        0px 15px 16px -3px var(--shadow-clr);

    box-shadow: $box-shadow;

    @include darkmode-counterpart {
        box-shadow: $darkmode-highlight, 0 1px 4px -1px #0003;
    }
}

//————————————————————————————————————————
// 用于暗黑模式模式下给部分元素添加边框
@mixin border-or-not($outline: true, $border: true, $outline-width: 1px, $outline-light: false) {
    border: unset;
    // border-color: transparent;

    @if $outline-light ==true {
        outline: $outline-width solid #fff4;
        outline-offset: $outline-width * -1;
    }

    @content;

    @include darkmode-counterpart {
        @if $outline ==true {
            outline: $outline-width solid var(--b3-border-color-trans);
            outline-offset: $outline-width * -1;
        }

        @if $border ==true {
            border: 1px solid var(--b3-border-color-trans);
        }
    }
}

//——————————————————————————————————————

// 主要用于设置面板的大按钮
@mixin button-primary {
    // background-color: var(--b3-list-hover);
    background-color: #0000;
    border-radius: 7px;
    color: var(--b3-theme-primary);
    // color: var(--b3-theme-on-background);
    font-weight: 600;
    transition-duration: .1s;
    border: none;
    box-shadow: none;
    outline: 1px solid rgb(from var(--b3-theme-on-background) r g b / .2);
    outline-offset: -1px;
    transition-property: color, background-color, outline-color, transform;

    &:hover {
        background-color: var(--b3-theme-primary);
        color: var(--b3-theme-on-primary);

        outline-color: transparent;
        // border-radius: 6px;
    }

    &:active {
        transform: scale(.95);
        opacity: .8;
    }

    @content;
}

// 普通按钮
@mixin button-action($type) {
    border-radius: 7px;
    padding: 4px 16px;
    transition-property: color, background-color, outline, transform;
    outline-offset: -1px;
    transition-duration: .1s;

    &:hover {
        box-shadow: none;
    }

    &:active {
        transform: scale(0.95);
        opacity: .8;
        box-shadow: none;
        // transition: .1s;
    }

    &:focus {
        box-shadow: none;
    }

    @if $type=='normal' {
        color: var(--b3-theme-on-background);
        outline: 1px solid rgb(from var(--b3-theme-on-background) r g b / .2);

        &:hover {
            background-color: var(--b3-list-hover);
            color: var(--b3-theme-on-background);
        }

        &:active,
        &:focus {
            @include theme-variant-color(background-color, list-hover, 0.1);
            color: var(--b3-theme-on-background);
            // transition: .1s;
        }
    }

    @else if $type =='primary' {
        color: var(--b3-theme-on-primary);
        background-color: var(--b3-theme-primary);
        // font-weight: 600;

        &:hover {
            background-color: rgb(from var(--b3-theme-primary) r g b / .8);
        }

        &:active,
        &:focus {
            background-color: var(--b3-theme-primary);
            color: var(--b3-theme-on-primary);
            // transition: .1s;
        }
    }

    @else if $type =='danger' {
        color: var(--b3-theme-error);
        background-color: transparent;
        outline: 1px solid rgb(from var(--b3-theme-error) r g b / .3);
        box-shadow: none;

        &:hover {
            background-color: rgb(from var(--b3-theme-error) r g b / .2);
        }

        &:active,
        &:focus {
            background-color: var(--b3-theme-error);
            color: var(--b3-theme-on-error);
            // transition: .1s;
            outline-color: transparent;
        }
    }

    @content;
}

// ——————————————————————————

@mixin dialog-tabbar {
    margin: 8px auto 8px;
    border-radius: 8px !important;
    background-color: var(--b3-list-hover);
    padding: 2px;
    height: 32px;

    // @include darkmode-counterpart {
    //     background-color: #0004;
    // }

    .item {
        border-radius: 6px !important;
        background-color: transparent;
        transition: none !important;
        padding: 2px 12px;

        &:hover:not(.item--focus) {
            background-color: transparent !important;

            .item__text {
                color: var(--b3-theme-on-background) !important;
            }
        }

        &--focus {
            max-width: unset;
            box-shadow: 0 1px 4px -1px #0003, 0 0.3px 0 0 #0002;
            animation: none;
            background-color: #fff;

            @include darkmode-counterpart {
                background-color: #ffffff23;
            }

            @include darkmode-counterpart {
                box-shadow: 0 1px 0 0 inset rgba(255, 255, 255, 0.1), 0 1px 4px -1px #0003, 0 0.3px 0 0 #0002;
            }

            // @include theme-variant-color(background-color, light-components, 1, 0.2);

            .item__text {
                color: var(--b3-theme-on-background);
            }
        }

        .item__text {
            transform: none;
            transition-property: color;
        }
    }

    .item:not(.item--focus, .fn__none)+.item:not(.item--focus):not(:first-child)::before {
        content: "";
        position: absolute;
        display: block;
        width: 2px;
        height: 1.3em;
        inset-inline-start: -4px;
        border-radius: 9px;
        pointer-events: none;

        @include theme-variant-color(background-color, list-hover, 0.08);
    }

    .item__graphic {
        font-family: var(--b3-font-family-emoji);
    }
}

// ——————————————————————————
@mixin webkit-scrollbar {
    ::-webkit-scrollbar {
        background-color: transparent;

        &-thumb {
            -webkit-border-radius: 10px;
            background-clip: padding-box;
            border: 2px solid transparent;
            background-color: var(--b3-scroll-color);

            &:hover {
                background-color: var(--b3-scroll-color-hover);
            }
        }

        &-track {
            .b3-dialog & {
                margin: 8px 0;
            }

            :where(.b3-menu, .protyle-hint, .protyle-util) & {
                margin: 4px 0;
            }
        }
    }

    .protyle-content::-webkit-scrollbar-track {
        margin-bottom: 4px;
    }
}

// color scheme related mixins————————————————
$theme-light: (
    primary: rgb(52, 120, 246),
    secondary: rgb(241, 154, 55),
    background: #fff,
    surface: rgb(240, 240, 240),
    error: rgb(234, 77, 60),
    on-primary: #fff,
    on-secondary: #fff,
    on-background: rgb(69, 69, 69),
    on-surface-gray: rgb(127, 127, 127),
    border: rgb(230, 230, 230),
    scroll: rgba(0, 0, 0, 0.08),
    list-hover: rgba(0, 0, 0, 0.05),
    menu-background: rgb(236, 236, 236),
    menu-item-hv-background: rgb(41, 98, 217, 0.8),
    menu-item-hv-on-background: #fff,
    mask-background: rgba(0, 0, 0, 0.78),
    card-error: #732F25,
    card-error-background: #FFE2D7,
    card-warning: #524900,
    card-warning-background: #FBF5BE,
    card-info: #044977,
    card-info-background: #CDF7FF,
    card-success: #2A5318,
    card-success-background: #DBFED0,
    font-color1: #000,
    font-color2: #808080,
    font-color3: #A9733A,
    font-color4: #C85E00,
    font-color5: #997C00,
    font-color6: #389800,
    font-color7: #009F76,
    font-color8: #0098C1,
    font-color9: #007FF2,
    font-color10:#705EFD,
    font-color11:#B240D2,
    font-color12:#DC2188,
    font-color13:#E72312,
    font-background1: #00000000,
    font-background2: #E8E8E8,
    font-background3: #EDE7E1,
    font-background4: #FFEAC1,
    font-background5: #FBF5BE,
    font-background6: #DBFED0,
    font-background7: #C2FFEE,
    font-background8: #BAFFFF,
    font-background9: #CDF7FF,
    font-background10:#E9EDFF,
    font-background11:#FFE4FF,
    font-background12:#FFE0F5,
    font-background13:#FFE2D7,
    pdf-background1: #FFC3D3,
    pdf-background2: #FFD18D,
    pdf-background3: #FDE57A,
    pdf-background4: #A7FDB4,
    pdf-background5: #A3F4FF,
    pdf-background6: #BDE2FF,
    pdf-background7: #FFC9FF,
    inline-link-color: #4285f4,
    inline-mark-background: rgb(168, 251, 172),
    light-components:#fff
);

$theme-dark: (
    primary: rgb(17, 139, 255),
    secondary: rgb(198, 126, 44),
    background: rgb(30, 30, 30),
    surface: rgb(56, 56, 56),
    error: rgb(255, 59, 48),
    on-primary: #ffffffe3,
    on-secondary: #fff,
    on-background: rgb(220, 220, 220),
    on-surface-gray: rgb(127, 127, 127),
    border: hsl(0, 0%, 26%),
    scroll: rgba(255, 255, 255, 0.1),
    list-hover: rgba(255, 255, 255, 0.06),
    menu-background: rgb(50, 50, 50),
    menu-item-hv-background: rgb(32, 80, 202, 0.8),
    menu-item-hv-on-background:#ffffffe3,
    mask-background: rgba(0, 0, 0, 0.78),
    card-error: #FFC8BC,
    card-error-background: #52302B,
    card-warning: #E5DEA0,
    card-warning-background: #403C1A,
    card-info: #9AEAF8,
    card-info-background: #233D53,
    card-success: #C1E8B4,
    card-success-background: #2D4126,
    font-color1: #FFF,
    font-color2: #AEAEAE,
    font-color3: #ECCEB3,
    font-color4: #FFC168,
    font-color5: #E8D754,
    font-color6: #A2EB88,
    font-color7: #45F3CC,
    font-color8: #01EFFF,
    font-color9: #79DDFF,
    font-color10: #C5C7FF,
    font-color11: #FDB4FF,
    font-color12: #FFADDA,
    font-color13: #FFB09B,
    font-background1: #00000000,
    font-background2: #3A3A3A,
    font-background3: #3E3A35,
    font-background4: #5E3808,
    font-background5: #4B4400,
    font-background6: #2C4C20,
    font-background7: #004F3F,
    font-background8: #004D59,
    font-background9: #16466A,
    font-background10:#3C3C6B,
    font-background11:#54345D,
    font-background12:#632E46,
    font-background13:#663028,
    pdf-background1: #9F3D53,
    pdf-background2: #935000,
    pdf-background3: #786100,
    pdf-background4: #1C7736,
    pdf-background5: #14707A,
    pdf-background6: #415EAC,
    pdf-background7: #814893,
    inline-link-color: #8ab4f8,
    inline-mark-background: #00d95964,
    light-components:#e0e0e0,
);

@mixin theme-root($theme-map) {
    --b3-theme-primary: #{map-get($theme-map,primary)};
    --b3-theme-primary-light: #{rgba(map-get($theme-map, primary), 0.56)};
    --b3-theme-primary-lighter: #{rgba(map-get($theme-map,primary), 0.38)};
    --b3-theme-primary-lightest: #{rgba(map-get($theme-map,primary), 0.2)};
    --b3-theme-secondary: #{map-get($theme-map,secondary)};
    --b3-theme-background: #{map-get($theme-map, background)};
    --b3-theme-background-light: #{rgb(map-get($theme-map,background),0.1)};
    --b3-theme-surface: #{map-get($theme-map,surface)};
    --b3-theme-surface-light: #{rgb(map-get($theme-map,surface), 0.5)};
    --b3-theme-error: #{map-get($theme-map,error)};

    /* 文字颜色 */
    --b3-theme-on-primary: #{map-get($theme-map,on-primary)};
    --b3-theme-on-secondary: #{map-get($theme-map,on-secondary)};
    --b3-theme-on-background: #{map-get($theme-map,on-background)};
    --b3-theme-on-surface:#{rgb(map-get($theme-map, on-background), 0.65)};
    --b3-theme-on-surface-light: #{rgb(map-get($theme-map,on-surface-gray), 0.68)};
    --b3-theme-surface-lighter: var(--b3-border-color);
    --b3-theme-on-error: #{map-get($theme-map,on-primary)};

    /* 线条 */
    --b3-border-color: #{map-get($theme-map,border)};
    --b3-border-color-trans:#{rgb(map-get($theme-map, on-background), 0.15)};

    /* 滚动条 */
    --b3-scroll-color: #{map-get($theme-map,scroll)};
    --b3-scroll-color-hover: #{change-color(map-get($theme-map, scroll), $alpha:alpha(map-get($theme-map, scroll)) * 2)};

    /* 列表 */
    --b3-list-hover: #{map-get($theme-map,list-hover)};

    /* 菜单 */
    --b3-menu-background: #{map-get($theme-map,menu-background)};
    --b3-menu-item-background-hover: #{map-get($theme-map,menu-item-hv-background)};
    --b3-menu-item-background-hover-text:#{map-get($theme-map,menu-item-hv-on-background)};

    /* 提示 */
    --b3-tooltips-color: var(--b3-theme-on-background);
    --b3-tooltips-background: var(--b3-menu-background);

    /* 遮罩 */
    --b3-mask-background: #{map-get($theme-map,mask-background)};

    /* 卡片背景 */
    --b3-card-error-color: #{map-get($theme-map,card-error)};
    --b3-card-error-background: #{map-get($theme-map,card-error-background)};
    --b3-card-warning-color: #{map-get($theme-map,card-warning)};
    --b3-card-warning-background:#{map-get($theme-map,card-warning-background)};
    --b3-card-info-color: #{map-get($theme-map,card-info)};
    --b3-card-info-background: #{map-get($theme-map,card-info-background)};
    --b3-card-success-color: #{map-get($theme-map,card-success)};
    --b3-card-success-background: #{map-get($theme-map,card-success-background)};

    /* 自定义文字 */
    @for $i from 1 through 13 {
        $font-color: map-get($theme-map, font-color#{$i});

        //背景色：不透明色
        // $font-background: mix(map-get($theme-map, font-color#{$i}), map-get($theme-map, background), 12.5%);
        $font-background: map-get($theme-map, font-background#{$i});

        // 背景色：透明色
        // $font-background:change-color(map-get($theme-map,font-color#{$i}), $alpha: 0.1);

        --b3-font-color#{$i}: #{$font-color};

        --b3-font-background#{$i}:#{$font-background};
    }

    ;

    /* 所见即所得行内元素颜色 */
    --b3-protyle-inline-link-color: #{map-get($theme-map,inline-link-color)};
    --b3-protyle-inline-mark-background: #{map-get($theme-map,inline-mark-background)};
    --b3-protyle-code-background: var(--b3-theme-surface);

    // 占位符
    --b3-empty-color: #{rgba(map-get($theme-map,on-background), 0.45)};

    // 关系图
    --b3-graph-p-point: #a188fd;
    --b3-graph-heading-point: #ef6b9a;
    --b3-graph-math-point: #24a5ff;
    --b3-graph-code-point: #6a9bff;
    --b3-graph-table-point: #0abc71;
    --b3-graph-list-point: #82b025;
    // --b3-graph-todo-point: #FFBF00;
    --b3-graph-olist-point: #b3005f;
    --b3-graph-listitem-point: #00b89f;
    --b3-graph-bq-point: #de8700;
    --b3-graph-super-point: #a2a700;
    --b3-graph-doc-point: var(--b3-theme-on-background);
    --b3-graph-tag-point: #ef7747;
    // --b3-graph-asset-point: #05c091;
    --b3-graph-line: var(--b3-border-color-trans);
    --b3-graph-ref-line: var(--b3-theme-primary-light);
    // --b3-graph-tag-line: #5f6b06;
    // --b3-graph-tag-tag-line: #dbf32f;
    // --b3-graph-asset-line: #037457;
    --b3-graph-hl-point: #ff5799;
    --b3-graph-hl-line: #ff5799;

    /* 父块颜色 */
    // --b3-parent-background: ;
}

@mixin theme-variant-color($property, $theme-key, $opacity-light: 1, $opacity-dark: $opacity-light, $important: false) {

    $_color: map-get($theme-light, $theme-key);

    @if $_color !=null {
        @if $important {
            #{$property}: change-color($_color, $alpha: $opacity-light) !important;
        }

        @else {
            #{$property}: change-color($_color, $alpha: $opacity-light);
        }
    }

    @else {
        @warn "No color found for `#{$theme-key}` in `$theme-light`. Please check your `$theme-light` map and the `$theme-key` you are using.";
    }

    @include darkmode-counterpart {
        $_color: map-get($theme-dark, $theme-key);

        @if $_color !=null {
            @if $important {
                #{$property}: change-color($_color, $alpha: $opacity-dark) !important;
            }

            @else {
                #{$property}: change-color($_color, $alpha: $opacity-dark);
            }
        }

        @else {
            @warn "No color found for `#{$theme-key}` in `$theme-dark`. Please check your `$theme-dark` map and the `$theme-key` you are using.";
        }
    }
}

@mixin darkmode-counterpart {
    [data-theme-mode="dark"] & {
        @content;
    }
}

/*
source: https://toward.studio/latest/making-css-gradients-smooth
*/
/*
A simple little SCSS mixin for creating scrim gradients
Inspired by Andreas Larson - https://github.com/larsenwork
https://css-tricks.com/easing-linear-gradients/
*/
@mixin smoothGradientHex($startColor: #000, $direction: 'to bottom') {

    $scrimCoordinates: (
        0: 1,
        19: 0.738,
        34: 0.541,
        47: 0.382,
        56.5: 0.278,
        65: 0.194,
        73: 0.126,
        80.2: 0.075,
        86.1: 0.042,
        91: 0.021,
        95.2: 0.008,
        98.2: 0.002,
        100: 0
    );

$hue: hue($startColor);
$saturation: saturation($startColor);
$lightness: lightness($startColor);
$stops: (
);

@each $colorStop, $alphaValue in $scrimCoordinates {
    $stop: hsla($hue, $saturation, $lightness, $alphaValue) percentage($colorStop/100);
    $stops: append($stops, $stop, comma);
}

background: linear-gradient(unquote($direction), $stops);

}

@mixin smoothGradientVar($startColor, $startColorOpacityFactor: 1, $direction: 'to bottom') {
    $scrimCoordinates: (
        0: 1,
        19: 0.738,
        34: 0.541,
        47: 0.382,
        56.5: 0.278,
        65: 0.194,
        73: 0.126,
        80.2: 0.075,
        86.1: 0.042,
        91: 0.021,
        95.2: 0.008,
        98.2: 0.002,
        100: 0
    );

$stops: (
);

@each $colorStop, $alphaValue in $scrimCoordinates {
    $stop: rgb(from $startColor r g b / calc($alphaValue * $startColorOpacityFactor)) percentage(calc($colorStop/100));
    $stops: append($stops, $stop, comma);
}

background: linear-gradient(unquote($direction), $stops);
}

@mixin overflow-indicator-line($height: 1px) {
    &::before {
        content: '';
        display: block;
        position: sticky;
        top: 0;
        width: 100%;
        height: $height;
        z-index: 1;
        opacity: 0;
        background-color: var(--b3-border-color-trans);

        animation-name: maskAppear-bgClr;
        animation-timeline: scroll();
        animation-range: 2px 100%;

        margin-bottom: calc(-1 * $height);

        pointer-events: none;
    }
}

@mixin overflow-indicator-fadein-bgClr($size: 12px, $bg-clr: var(--b3-theme-background), $range: 'top bottom') {
    $range-dir: (
        'top': 'to bottom',
        'bottom': 'to top',
        'left': 'to right',
        'right': 'to left',
    );

@if str-index($range, 'top') or str-index($range, 'left') {
    $dir: map-get($range-dir, nth(string.split($range, ' '), 1));

    &::before {
        content: '';
        display: block;
        position: sticky;
        z-index: 1;
        opacity: 0;

        animation-name: maskAppear-bgClr;
        animation-range: 1px 100%;

        // background-image: linear-gradient(#{$dir}, $bg-clr, transparent);
        @include smoothGradientVar($bg-clr, $direction: #{$dir});

        margin-#{str-slice($dir, 4)}: calc(-1 * $size);

        pointer-events: none;

        @if $dir =='to bottom' {
            top: 0;
            width: 100%;
            height: $size;
            animation-timeline: scroll();
        }

        @else {
            left: 0;
            min-width: $size;
            height: 100%;
            animation-timeline: scroll(x);
        }
    }
}

@if str-index($range, 'bottom') or str-index($range, 'right') {
    $dir: map-get($range-dir, nth(string.split($range, ' '), -1)); // -> 'to top' / 'to left'

    &::after {
        content: '';
        display: block;
        position: sticky;
        z-index: 1;
        opacity: 0;

        animation-name: maskAppear-bgClr;
        animation-range: 0% calc(100% - 1px);
        animation-direction: alternate-reverse;

        // background-image: linear-gradient(#{$dir}, $bg-clr, transparent);
        @include smoothGradientVar($bg-clr, $direction: #{$dir});

        margin-#{str-slice($dir, 4)}: calc(-1 * $size);

        pointer-events: none;

        @if $dir =='to top' {
            bottom: 0;
            width: 100%;
            height: $size;
            animation-timeline: scroll();
        }

        @else {
            right: 0;
            min-width: $size;
            height: 100%;
            animation-timeline: scroll(x);
        }
    }
}
}

@mixin overflow-indicator-fadein-mask($size: 12px, $range: 'top bottom') {

    $range-start: nth(string.split($range, ' '), 1);
    $range-end: nth(string.split($range, ' '), -1);
    $gradient-dir: '';
    $this-id: unique-id();

    @if str-index($range, 'top') or str-index($range, 'bottom') {
        $gradient-dir: 'to bottom';
    }

    @else {
        $gradient-dir: 'to right';
    }

    mask-image: linear-gradient(#{$gradient-dir}, transparent, black var(--mask-stop-start), black calc(100% - var(--mask-stop-end)), transparent);

    $anim-name: (
    );
$anim-range: (
);
$anim-dir: (
);

@if $range-start =='top' or $range-start =='left' {
    $anim-name: append($anim-name, 'maskAppear-mask-start-#{$this-id}', comma);
    $anim-range: append($anim-range, '1px 100%', comma);
    $anim-dir: append($anim-dir, 'alternate', comma);
}

@if $range-end =='bottom' or $range-end =='right' {
    $anim-name: append($anim-name, 'maskAppear-mask-end-#{$this-id}', comma);
    $anim-range: append($anim-range, '0% calc(100% - 1px)', comma);
    $anim-dir: append($anim-dir, 'alternate-reverse', comma);
}

animation-name: #{$anim-name};
animation-range: #{$anim-range};
animation-direction: #{$anim-dir};

@if $range-start =='top' or $range-start =='bottom' {
    animation-timeline: scroll(self y);
}

@else {
    animation-timeline: scroll(self x);
}

@keyframes maskAppear-mask-start-#{$this-id} {
    0% {
        --mask-stop-start: 0px;
    }

    1% {
        --mask-stop-start: #{$size};
    }

    100% {
        --mask-stop-start: #{$size};
    }
}

@keyframes maskAppear-mask-end-#{$this-id} {
    0% {
        --mask-stop-end: 0px;
    }

    1% {
        --mask-stop-end: #{$size};
    }

    100% {
        --mask-stop-end: #{$size};
    }
}
}

@property --mask-stop-start {
    syntax: '<length>';
    inherits: false;
    initial-value: 0px;
}

@property --mask-stop-end {
    syntax: '<length>';
    inherits: false;
    initial-value: 0px;
}

@mixin line-clamp($line-clamp: 1, $orientation: vertical) {
    @supports (-webkit-line-clamp: 1) {
        display: -webkit-box;
        -webkit-line-clamp: $line-clamp;
        -webkit-box-orient: $orientation;
    }
}

@mixin database-assets-style($level: "non-chip") {

    $selector: if($level =="non-chip", ".av__celltext--url", ".b3-chip.av__celltext--url");

    #{$selector} {
        // 资源列超链接或资源链接
        text-decoration: none;
        background-color: transparent;
        outline: 1px solid var(--b3-border-color-trans);
        // outline-offset: -1.5px;
        font-size: 100%;
        border-radius: 4px;

        &:hover {
            outline-color: var(--b3-theme-primary-lighter);
            color: var(--b3-theme-primary);

            &::before {
                background-color: var(--b3-theme-primary);
            }
        }

        &::before {
            content: "";
            width: 1em;
            height: 1em;
            display: inline-block;
            background-color: var(--b3-theme-on-surface);
            mask-image: url(icons/icon-assets.svg);
            mask-size: 100% 100%;
            vertical-align: -2px;
            margin-right: 0.2em;
        }

        &[data-url^="http"]::before {
            mask-image: url(icons/icon-outerLink.svg);
        }

        &[data-url^="siyuan"]::before {
            mask-image: url(icons/icon-syLink.svg);
        }

        @content;
    }
}

@mixin bouncy-check-box($checked: false, $icon-size: 1.1em, $stroke-width: .1em) {
    &::before {
        content: '' !important; // fix https://github.com/mustakshif/Asri/issues/113
        position: absolute;
        // display: block !important;

        @if $checked==false {
            width: calc($icon-size - .05em);
            height: calc($icon-size - .05em);
            background-color: currentColor;
            mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="1.5"><path stroke-linecap="round" stroke-linejoin="round"/><rect width="18.5" height="18.5" x="2.75" y="2.75" rx="6"/></g></svg>');
            animation: uncheck .3s var(--asri-ease-elastic-in-out-3) forwards; // Animation adds mousewheel event listener to the block and the content in it, which is not good? This can be checked in the render tab of the inspector.
        }

        @else {
            width: $icon-size;
            height: $icon-size;
            background-color: var(--b3-theme-primary);
            mask-image: url('data:image/svg+xml, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="currentColor" d="M15.25 2h-6.5A6.76 6.76 0 0 0 2 8.75v6.5A6.76 6.76 0 0 0 8.75 22h6.5A6.76 6.76 0 0 0 22 15.25v-6.5A6.76 6.76 0 0 0 15.25 2m2.06 8.16l-5.22 5.22a2 2 0 0 1-1.41.59a2 2 0 0 1-.76-.15a2 2 0 0 1-.64-.44l-2.59-2.59a1 1 0 0 1 1.41-1.41l2.59 2.59l5.21-5.23a1.002 1.002 0 0 1 1.41 1.42"/></svg>');
            animation: check .3s var(--asri-ease-elastic-in-out-3) forwards;
        }

        @content;
    }
}

@keyframes check {

    0%,
    100% {
        transform: none;
    }

    10% {
        transform: scale(1.2);
    }
}

@keyframes uncheck {

    0%,
    100% {
        transform: none;
    }

    3% {
        transform: scale(1.2);
    }
}

@mixin bouncy-scaling-animation {
    // opacity: 0;
    transform-origin: top left;
    // transform: scale(0.985);
    // animation: scaleBounce 0.25s cubic-bezier(0.12, 0.95, 0.4, 1);
    animation: scaleBounce .5s var(--asri-ease-spring-3);
}

@keyframes scaleBounce {

    // fix location bug
    0%,
    5% {
        opacity: 0;
        transform: none;
    }

    5% {
        opacity: 0;
        transform: scale(0.98);
    }

    // 70% {
    //     opacity: 1;
    //     transform: scale(1.002);
    // }

    100% {
        opacity: 1;
        transform: scale(1);
    }
}

// other global vars ——————————————————————————

$border-rd-card: 20px;
$border-rd-popover: 12px;
$border-rd-menu: 10px;
$border-rd-tab: 8px;
$border-rd-default: 6px;

// $timing-function-decelerate: cubic-bezier(0, 0, 0, 1);
// $timing-function-accelerate: cubic-bezier(0.3, 0, 1, 1);

// $timing-function-bouncy-both: cubic-bezier(0.68, -0.55, 0.265, 1.55);
// $timing-function-bouncy-end: cubic-bezier(0, 0, 0.27, 1.55);

$text-underline-thickness: .08em;

@mixin asri-common-css-vars {

    // copied from https://unpkg.com/open-props/easings.min.css, 2025-01-08
    // added prefix 'asri' to avoid potential conflicts

    --asri-ease-1: cubic-bezier(.25, 0, .5, 1);
    --asri-ease-2: cubic-bezier(.25, 0, .4, 1);
    --asri-ease-3: cubic-bezier(.25, 0, .3, 1);
    --asri-ease-4: cubic-bezier(.25, 0, .2, 1);
    --asri-ease-5: cubic-bezier(.25, 0, .1, 1);
    --asri-ease-in-1: cubic-bezier(.25, 0, 1, 1);
    --asri-ease-in-2: cubic-bezier(.50, 0, 1, 1);
    --asri-ease-in-3: cubic-bezier(.70, 0, 1, 1);
    --asri-ease-in-4: cubic-bezier(.90, 0, 1, 1);
    --asri-ease-in-5: cubic-bezier(1, 0, 1, 1);
    --asri-ease-out-1: cubic-bezier(0, 0, .75, 1);
    --asri-ease-out-2: cubic-bezier(0, 0, .50, 1);
    --asri-ease-out-3: cubic-bezier(0, 0, .3, 1);
    --asri-ease-out-4: cubic-bezier(0, 0, .1, 1);
    --asri-ease-out-5: cubic-bezier(0, 0, 0, 1);
    --asri-ease-in-out-1: cubic-bezier(.1, 0, .9, 1);
    --asri-ease-in-out-2: cubic-bezier(.3, 0, .7, 1);
    --asri-ease-in-out-3: cubic-bezier(.5, 0, .5, 1);
    --asri-ease-in-out-4: cubic-bezier(.7, 0, .3, 1);
    --asri-ease-in-out-5: cubic-bezier(.9, 0, .1, 1);
    --asri-ease-elastic-out-1: cubic-bezier(.5, .75, .75, 1.25);
    --asri-ease-elastic-out-2: cubic-bezier(.5, 1, .75, 1.25);
    --asri-ease-elastic-out-3: cubic-bezier(.5, 1.25, .75, 1.25);
    --asri-ease-elastic-out-4: cubic-bezier(.5, 1.5, .75, 1.25);
    --asri-ease-elastic-out-5: cubic-bezier(.5, 1.75, .75, 1.25);
    --asri-ease-elastic-in-1: cubic-bezier(.5, -0.25, .75, 1);
    --asri-ease-elastic-in-2: cubic-bezier(.5, -0.50, .75, 1);
    --asri-ease-elastic-in-3: cubic-bezier(.5, -0.75, .75, 1);
    --asri-ease-elastic-in-4: cubic-bezier(.5, -1.00, .75, 1);
    --asri-ease-elastic-in-5: cubic-bezier(.5, -1.25, .75, 1);
    --asri-ease-elastic-in-out-1: cubic-bezier(.5, -.1, .1, 1.5);
    --asri-ease-elastic-in-out-2: cubic-bezier(.5, -.3, .1, 1.5);
    --asri-ease-elastic-in-out-3: cubic-bezier(.5, -.5, .1, 1.5);
    --asri-ease-elastic-in-out-4: cubic-bezier(.5, -.7, .1, 1.5);
    --asri-ease-elastic-in-out-5: cubic-bezier(.5, -.9, .1, 1.5);
    --asri-ease-step-1: steps(2);
    --asri-ease-step-2: steps(3);
    --asri-ease-step-3: steps(4);
    --asri-ease-step-4: steps(7);
    --asri-ease-step-5: steps(10);
    --asri-ease-elastic-1: var(--asri-ease-elastic-out-1);
    --asri-ease-elastic-2: var(--asri-ease-elastic-out-2);
    --asri-ease-elastic-3: var(--asri-ease-elastic-out-3);
    --asri-ease-elastic-4: var(--asri-ease-elastic-out-4);
    --asri-ease-elastic-5: var(--asri-ease-elastic-out-5);
    --asri-ease-squish-1: var(--asri-ease-elastic-in-out-1);
    --asri-ease-squish-2: var(--asri-ease-elastic-in-out-2);
    --asri-ease-squish-3: var(--asri-ease-elastic-in-out-3);
    --asri-ease-squish-4: var(--asri-ease-elastic-in-out-4);
    --asri-ease-squish-5: var(--asri-ease-elastic-in-out-5);
    --asri-ease-spring-1: linear(0, 0.006, 0.025 2.8%, 0.101 6.1%, 0.539 18.9%, 0.721 25.3%, 0.849 31.5%, 0.937 38.1%, 0.968 41.8%, 0.991 45.7%, 1.006 50.1%, 1.015 55%, 1.017 63.9%, 1.001);
    --asri-ease-spring-2: linear(0, 0.007, 0.029 2.2%, 0.118 4.7%, 0.625 14.4%, 0.826 19%, 0.902, 0.962, 1.008 26.1%, 1.041 28.7%, 1.064 32.1%, 1.07 36%, 1.061 40.5%, 1.015 53.4%, 0.999 61.6%, 0.995 71.2%, 1);
    --asri-ease-spring-3: linear(0, 0.009, 0.035 2.1%, 0.141 4.4%, 0.723 12.9%, 0.938 16.7%, 1.017, 1.077, 1.121, 1.149 24.3%, 1.159, 1.163, 1.161, 1.154 29.9%, 1.129 32.8%, 1.051 39.6%, 1.017 43.1%, 0.991, 0.977 51%, 0.974 53.8%, 0.975 57.1%, 0.997 69.8%, 1.003 76.9%, 1);
    --asri-ease-spring-4: linear(0, 0.009, 0.037 1.7%, 0.153 3.6%, 0.776 10.3%, 1.001, 1.142 16%, 1.185, 1.209 19%, 1.215 19.9% 20.8%, 1.199, 1.165 25%, 1.056 30.3%, 1.008 33%, 0.973, 0.955 39.2%, 0.953 41.1%, 0.957 43.3%, 0.998 53.3%, 1.009 59.1% 63.7%, 0.998 78.9%, 1);
    --asri-ease-spring-5: linear(0, 0.01, 0.04 1.6%, 0.161 3.3%, 0.816 9.4%, 1.046, 1.189 14.4%, 1.231, 1.254 17%, 1.259, 1.257 18.6%, 1.236, 1.194 22.3%, 1.057 27%, 0.999 29.4%, 0.955 32.1%, 0.942, 0.935 34.9%, 0.933, 0.939 38.4%, 1 47.3%, 1.011, 1.017 52.6%, 1.016 56.4%, 1 65.2%, 0.996 70.2%, 1.001 87.2%, 1);
    --asri-ease-bounce-1: linear(0, 0.004, 0.016, 0.035, 0.063, 0.098, 0.141, 0.191, 0.25, 0.316, 0.391 36.8%, 0.563, 0.766, 1 58.8%, 0.946, 0.908 69.1%, 0.895, 0.885, 0.879, 0.878, 0.879, 0.885, 0.895, 0.908 89.7%, 0.946, 1);
    --asri-ease-bounce-2: linear(0, 0.004, 0.016, 0.035, 0.063, 0.098, 0.141 15.1%, 0.25, 0.391, 0.562, 0.765, 1, 0.892 45.2%, 0.849, 0.815, 0.788, 0.769, 0.757, 0.753, 0.757, 0.769, 0.788, 0.815, 0.85, 0.892 75.2%, 1 80.2%, 0.973, 0.954, 0.943, 0.939, 0.943, 0.954, 0.973, 1);
    --asri-ease-bounce-3: linear(0, 0.004, 0.016, 0.035, 0.062, 0.098, 0.141 11.4%, 0.25, 0.39, 0.562, 0.764, 1 30.3%, 0.847 34.8%, 0.787, 0.737, 0.699, 0.672, 0.655, 0.65, 0.656, 0.672, 0.699, 0.738, 0.787, 0.847 61.7%, 1 66.2%, 0.946, 0.908, 0.885 74.2%, 0.879, 0.878, 0.879, 0.885 79.5%, 0.908, 0.946, 1 87.4%, 0.981, 0.968, 0.96, 0.957, 0.96, 0.968, 0.981, 1);
    --asri-ease-bounce-4: linear(0, 0.004, 0.016 3%, 0.062, 0.141, 0.25, 0.391, 0.562 18.2%, 1 24.3%, 0.81, 0.676 32.3%, 0.629, 0.595, 0.575, 0.568, 0.575, 0.595, 0.629, 0.676 48.2%, 0.811, 1 56.2%, 0.918, 0.86, 0.825, 0.814, 0.825, 0.86, 0.918, 1 77.2%, 0.94 80.6%, 0.925, 0.92, 0.925, 0.94 87.5%, 1 90.9%, 0.974, 0.965, 0.974, 1);
    --asri-ease-bounce-5: linear(0, 0.004, 0.016 2.5%, 0.063, 0.141, 0.25 10.1%, 0.562, 1 20.2%, 0.783, 0.627, 0.534 30.9%, 0.511, 0.503, 0.511, 0.534 38%, 0.627, 0.782, 1 48.7%, 0.892, 0.815, 0.769 56.3%, 0.757, 0.753, 0.757, 0.769 61.3%, 0.815, 0.892, 1 68.8%, 0.908 72.4%, 0.885, 0.878, 0.885, 0.908 79.4%, 1 83%, 0.954 85.5%, 0.943, 0.939, 0.943, 0.954 90.5%, 1 93%, 0.977, 0.97, 0.977, 1)
}
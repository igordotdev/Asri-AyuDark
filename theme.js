(()=>{"use strict";var __webpack_modules__={"./src/main.ts":(__unused_webpack_module,exports,__webpack_require__)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nconst modules_1 = __webpack_require__(/*! ./modules */ "./src/modules/index.ts");\n(0, modules_1.loadAsriJSModules)();\nwindow.destroyTheme = () => {\n    let completeUnload = true;\n    setTimeout(() => {\n        const themePairOnDestroy = {\n            "light": window.siyuan.config.appearance.themeLight,\n            "dark": window.siyuan.config.appearance.themeDark,\n        };\n        console.log("destroy", themePairOnDestroy);\n        if (themePairOnDestroy.light === "Asri" && themePairOnDestroy.dark === "Asri")\n            completeUnload = false;\n        console.log(`\\x1b[31m\\x1b[1m\\x1b[47mTheme destroy mode: ${completeUnload ? "complete" : "incomplete"}\\x1b[0m`);\n        (0, modules_1.unloadAsriJSModules)(completeUnload);\n    }, 0);\n};\n\n\n//# sourceURL=webpack://asri/./src/main.ts?')},"./src/modules/afwd.ts":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.debouncedCalcProtyleSpacings = void 0;\nexports.calcProtyleSpacings = calcProtyleSpacings;\nexports.addAfwdMenuItems = addAfwdMenuItems;\nexports.removeProtyleSpacings = removeProtyleSpacings;\nconst api_1 = __webpack_require__(/*! ../util/api */ "./src/util/api.ts");\nconst misc_1 = __webpack_require__(/*! ../util/misc */ "./src/util/misc.ts");\nconst interfaceState_1 = __webpack_require__(/*! ../util/interfaceState */ "./src/util/interfaceState.ts");\nconst asriPalettes_1 = __webpack_require__(/*! ./asriPalettes */ "./src/modules/asriPalettes.ts");\nexports.debouncedCalcProtyleSpacings = (0, misc_1.debounce)(calcProtyleSpacings, 200);\nconst afwdBlockTypes = ["NodeParagraph", "NodeTable", "NodeAttributeView", "NodeSuperBlock", "NodeVideo", "NodeWidget", "NodeIFrame"];\nlet commonMenuEl;\nlet i18n = asriPalettes_1.i18n;\nfunction calcProtyleSpacings() {\n    interfaceState_1.wndElements === null || interfaceState_1.wndElements === void 0 ? void 0 : interfaceState_1.wndElements.forEach((wnd) => {\n        let protyles = wnd.querySelector(".file-tree") ? [] : wnd.querySelectorAll(".protyle-wysiwyg");\n        setTimeout(() => {\n            protyles.forEach((protyle) => {\n                let protylePadding;\n                // let protylePadding = Math.round(parseFloat(window.getComputedStyle(protyle).paddingLeft)) + \'px\';\n                protylePadding = protyle.style.paddingLeft;\n                if (protylePadding !== protyle.dataset.prevpadding) {\n                    protyle.style.setProperty("--protyle-spacing", protylePadding);\n                    protyle.dataset.prevpadding = protylePadding;\n                    // console.log(protylePadding);\n                }\n            });\n        }, 300); // protyle transition time\n    });\n}\nfunction addAfwdMenuItems(e) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c;\n        if (e.type !== "mouseup")\n            return;\n        if (!i18n)\n            i18n = yield (0, asriPalettes_1.loadI18n)();\n        const target = e.target;\n        const targetLabel = target.closest(".ariaLabel");\n        if (!targetLabel)\n            return;\n        const gutterType = targetLabel.dataset.type; // block types, \'NodeSuperBlock\', \'NodeParagraph\'...\n        const nonGutterType = target.closest(".protyle-title__icon")\n            ? "doc"\n            : targetLabel.dataset.type === "doc" // \'doc\' | \'more\' | ... | undefined\n                ? "doc"\n                : undefined;\n        const type = afwdBlockTypes.includes(gutterType) ? gutterType : nonGutterType;\n        if (!type)\n            return;\n        // console.log(type);\n        const blockId = type === "doc" ? (_a = targetLabel.parentElement.dataset["nodeId"]) !== null && _a !== void 0 ? _a : (_c = (_b = targetLabel.closest(".protyle")) === null || _b === void 0 ? void 0 : _b.querySelector(".protyle-title")) === null || _c === void 0 ? void 0 : _c.dataset["nodeId"] : targetLabel.dataset["nodeId"];\n        // console.log(blockId, type);\n        commonMenuEl = yield (0, misc_1.querySelectorAsync)("#commonMenu:not(.fn__none)");\n        initializeCurBlocksAttrs(type, blockId);\n    });\n}\nfunction initializeCurBlocksAttrs(curBlockType, curBlockId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const isDoc = curBlockType === "doc";\n        makeItems(curBlockType);\n        const attrs = yield (0, api_1.getBlockAttrs)(curBlockId);\n        let afwdAttrs = attrs["custom-afwd"];\n        let tdirAttr = attrs["custom-tdir"]; // \'ltr\' or \'rtl\'\n        if (!afwdAttrs)\n            afwdAttrs = "";\n        if (!tdirAttr)\n            tdirAttr = "";\n        afwdAttrs = afwdAttrs.split(" ");\n        // read & set initial states\n        if (afwdAttrs.length > 0) {\n            // for doc blocks\n            if (isDoc) {\n                afwdAttrs.forEach((attr) => {\n                    const menuItemEl = document.getElementById(`afwdMenuItem-${attr}`);\n                    if (menuItemEl) {\n                        menuItemEl.querySelector("input").checked = true;\n                    }\n                });\n                if (afwdAttrs.includes("all")) {\n                    const menuItemEls = commonMenuEl === null || commonMenuEl === void 0 ? void 0 : commonMenuEl.querySelectorAll("button[id^=afwdMenuItem]:not(#afwdMenuItem-all, #afwdMenuItem-clear)");\n                    menuItemEls === null || menuItemEls === void 0 ? void 0 : menuItemEls.forEach((el) => {\n                        el.classList.add("b3-menu__item--disabled");\n                        el.querySelector("input").disabled = true;\n                    });\n                }\n            }\n            // for indoc content blocks\n            else {\n                const menuItemEl = document.getElementById(`afwdMenuItem-${afwdAttrs[0]}`);\n                if (menuItemEl) {\n                    menuItemEl.classList.add("b3-menu__item--selected");\n                }\n            }\n        }\n        if (tdirAttr.length && isDoc) {\n            const menuItemEl = document.getElementById(`tdirMenuItem-${tdirAttr}`);\n            if (menuItemEl) {\n                menuItemEl.classList.add("b3-menu__item--selected");\n            }\n        }\n        menuItemsFunctionalities(isDoc, curBlockId, afwdAttrs, tdirAttr);\n    });\n}\nfunction makeItems(blockType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        if (!commonMenuEl || document.getElementById("afwdMenuItem-clear"))\n            return;\n        const commonMenuBtnList = commonMenuEl.lastChild;\n        const afwdEntryBtn = document.createElement("button");\n        afwdEntryBtn.className = "b3-menu__item";\n        const separator = document.createElement("button");\n        separator.className = "b3-menu__separator";\n        const inDocBlockMenuItems = `\n        <button class="b3-menu__item b3-menu__item--custom" id="afwdMenuItem-on">\n            <svg class="b3-menu__icon" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24">\n            <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><circle cx="12" cy="12" r="10"/><path d="m9 12l2 2l4-4"/></g>\n            </svg>\n            <span class="b3-menu__label">${i18n["afwdMenuItem-on"]}</span>\n        </button>\n        <button class="b3-menu__item b3-menu__item--custom" id="afwdMenuItem-off">\n            <svg class="b3-menu__icon" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24">\n            <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><circle cx="12" cy="12" r="10"/><path d="m15 9l-6 6m0-6l6 6"/></g>\n            </svg>\n            <span class="b3-menu__label">${i18n["afwdMenuItem-off"]}</span>\n        </button>\n    `;\n        const docMenuItems = `\n        <button class="b3-menu__item b3-menu__item--custom" id="afwdMenuItem-all">\n            <span class="b3-menu__label">\n                <div class="fn__flex">\n                    <svg class="b3-menu__icon" style=""></svg>\n                    <span>${i18n["afwdMenuItem-all"]}</span>\n                    <span class="fn__space fn__flex-1"></span>\n                    <input type="checkbox" class="b3-switch fn__flex-center">\n                </div>\n            </span>\n        </button>\n        <button class="b3-menu__item b3-menu__item--custom" id="afwdMenuItem-db">\n            <span class="b3-menu__label">\n                <div class="fn__flex">\n                    <svg class="b3-menu__icon" style=""><use xlink:href="#iconDatabase"></use></svg>\n                    <span>${i18n["afwdMenuItem-db"]}</span>\n                    <span class="fn__space fn__flex-1"></span>\n                    <input type="checkbox" class="b3-switch fn__flex-center">\n                </div>\n            </span>\n        </button>\n        <button class="b3-menu__item b3-menu__item--custom" id="afwdMenuItem-t">\n            <span class="b3-menu__label">\n                <div class="fn__flex">\n                    <svg class="b3-menu__icon" style=""><use xlink:href="#iconTable"></use></svg>\n                    <span>${i18n["afwdMenuItem-t"]}</span>\n                    <span class="fn__space fn__flex-1"></span>\n                    <input type="checkbox" class="b3-switch fn__flex-center">\n                </div>\n            </span>\n        </button>\n        <button class="b3-menu__item b3-menu__item--custom" id="afwdMenuItem-p">\n            <span class="b3-menu__label">\n                <div class="fn__flex">\n                    <svg class="b3-menu__icon"><use xlink:href="#iconImage"></use></svg>\n                    <span>${i18n["afwdMenuItem-p"]}</span>\n                    <span class="fn__space fn__flex-1"></span>\n                    <input type="checkbox" class="b3-switch fn__flex-center">\n                </div>\n            </span>\n        </button>\n        <button class="b3-menu__item b3-menu__item--custom" id="afwdMenuItem-iframe">\n            <span class="b3-menu__label">\n                <div class="fn__flex">\n                    <svg class="b3-menu__icon"><use xlink:href="#iconHTML5"></use></svg>\n                    <span>${i18n["afwdMenuItem-iframe"]}</span>\n                    <span class="fn__space fn__flex-1"></span>\n                    <input type="checkbox" class="b3-switch fn__flex-center">\n                </div>\n            </span>\n        </button>\n        <button class="b3-menu__item b3-menu__item--custom" id="afwdMenuItem-sb">\n            <span class="b3-menu__label">\n                <div class="fn__flex">\n                    <svg class="b3-menu__icon"><use xlink:href="#iconSuper"></use></svg>\n                    <span>${i18n["afwdMenuItem-sb"]}</span>\n                    <span class="fn__space fn__flex-1"></span>\n                    <input type="checkbox" class="b3-switch fn__flex-center">\n                </div>\n            </span>\n        </button>\n    `;\n        const afwdMenuBtnHtml = `\n        <svg class="b3-menu__icon" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 18 18">\n            <path fill="currentColor" d="m15.503 15.003l-.735.71a.75.75 0 1 0 1.042 1.078l1.886-1.82a1 1 0 0 0 0-1.44l-1.886-1.82a.75.75 0 0 0-1.042 1.079l.739.713H12.75a.75.75 0 0 0 0 1.5zM15 3a2 2 0 0 1 2 2v4.25a.75.75 0 0 1-1.5 0V5a.5.5 0 0 0-.5-.5H5a.5.5 0 0 0-.5.5v4.25a.75.75 0 0 1-1.5 0V5a2 2 0 0 1 2-2zM5.234 15.712l-.735-.71h2.752a.75.75 0 1 0 0-1.5H4.495l.739-.713a.75.75 0 0 0-1.042-1.078l-1.886 1.82a1 1 0 0 0 0 1.44l1.886 1.82a.75.75 0 0 0 1.042-1.079"/>\n        </svg>\n        <span class="b3-menu__label">${i18n["afwdDocMenuLabel"]}</span>\n        <svg class="b3-menu__icon b3-menu__icon--small">\n            <use xlink:href="#iconRight"></use>\n        </svg>\n        <div class="b3-menu__submenu">\n            <div class="b3-menu__items">\n                ${blockType === "doc" ? docMenuItems : inDocBlockMenuItems}\n                <button class="b3-menu__separator"></button>\n                <button class="b3-menu__item" id="afwdMenuItem-clear">\n                    <svg class="b3-menu__icon " style=""><use xlink:href="#iconTrashcan"></use></svg>\n                    <span class="b3-menu__label">${i18n["afwdMenuItem-clear"]}\n                    </span>\n                </button>\n            </div>\n        </div>\n    `;\n        afwdEntryBtn.innerHTML = afwdMenuBtnHtml;\n        commonMenuBtnList.insertBefore(afwdEntryBtn, (_a = commonMenuBtnList.lastChild) === null || _a === void 0 ? void 0 : _a.previousSibling);\n        commonMenuBtnList.insertBefore(separator, afwdEntryBtn);\n        // tdir menu\n        if (blockType !== "doc")\n            return;\n        const tdirEntryBtn = document.createElement("button");\n        tdirEntryBtn.className = "b3-menu__item";\n        const tdirMenuBtnHtml = `\n        <svg class="b3-menu__icon" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 22 22">\n            <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 5h-3m-5 0h5m-5 0v10m0-10h-1c-1.667 0-5 1-5 5s3.333 5 5 5h1m0 4v-4m5 4V5"/>\n        </svg>\n        <span class="b3-menu__label">${i18n["tdirDocMenuLabel"]}</span>\n        <svg class="b3-menu__icon b3-menu__icon--small">\n            <use xlink:href="#iconRight"></use>\n        </svg>\n        <div class="b3-menu__submenu">\n            <div class="b3-menu__items">\n                <button class="b3-menu__item b3-menu__item--custom" id="tdirMenuItem-ltr">\n                    <svg class="b3-menu__icon " style=""><use xlink:href="#iconLtr"></use></svg>\n                    <span class="b3-menu__label">${i18n["tdirMenuItem-ltr"]}</span>\n                </button>\n                <button class="b3-menu__item b3-menu__item--custom" id="tdirMenuItem-rtl">\n                    <svg class="b3-menu__icon " style=""><use xlink:href="#iconRtl"></use></svg>\n                    <span class="b3-menu__label">${i18n["tdirMenuItem-rtl"]}</span>\n                </button>                \n                <button class="b3-menu__separator"></button>\n                <button class="b3-menu__item" id="tdirMenuItem-clear">\n                    <svg class="b3-menu__icon " style=""><use xlink:href="#iconTrashcan"></use></svg>\n                    <span class="b3-menu__label">${i18n["afwdMenuItem-clear"]}\n                    </span>\n                </button>\n            </div>\n        </div>\n    `;\n        tdirEntryBtn.innerHTML = tdirMenuBtnHtml;\n        commonMenuBtnList.insertBefore(tdirEntryBtn, (_b = commonMenuBtnList.lastChild) === null || _b === void 0 ? void 0 : _b.previousSibling);\n    });\n}\nfunction menuItemsFunctionalities(isDoc, curBlockId, afwdAttrs, tdirAttrs) {\n    const afwdMenuItemEls = commonMenuEl === null || commonMenuEl === void 0 ? void 0 : commonMenuEl.querySelectorAll("button[id^=afwdMenuItem]:not(#afwdMenuItem-clear)");\n    const tdirMenuItemEls = commonMenuEl === null || commonMenuEl === void 0 ? void 0 : commonMenuEl.querySelectorAll("button[id^=tdirMenuItem]:not(#tdirMenuItem-clear)");\n    let groupedAttrsReserved = []; // save all attrs except \'all\', \'on\', \'off\'\n    const afwdMenuItemElsExceptAll = [...afwdMenuItemEls].filter((el) => el.id !== "afwdMenuItem-all");\n    if (isDoc) {\n        // set doc blocks afwd menu funcs\n        afwdMenuItemEls === null || afwdMenuItemEls === void 0 ? void 0 : afwdMenuItemEls.forEach((el) => {\n            el.onclick = (ev) => {\n                if (el.classList.contains("b3-menu__item--disabled"))\n                    return;\n                const input = el.querySelector("input");\n                const curAttrItem = el["id"].split("-")[1]; // \'all\' | \'db\' | ...\n                let isOn = input.checked; // check initial state\n                // clicking on input itself will toggle the checkbox automatically,\n                // but when clicking on label, we need to toggle it manually\n                if (ev.target === input)\n                    isOn = !isOn; // when clicking on input, restore to the state where the checkbox was not clicked\n                else\n                    input.checked = !isOn; // this is only used to change the state of the checkbox\'s appearance when clicking on label\n                // when menu item is actived\n                if (isOn) {\n                    if (curAttrItem === "all") {\n                        afwdMenuItemElsExceptAll.forEach((el) => {\n                            el.classList.remove("b3-menu__item--disabled");\n                            el.querySelector("input").disabled = false;\n                        });\n                        afwdAttrs = groupedAttrsReserved.length > 0 ? groupedAttrsReserved : [];\n                    }\n                    else\n                        afwdAttrs = afwdAttrs.filter((a) => a !== curAttrItem);\n                }\n                // when menu item is deactived\n                else {\n                    if (curAttrItem === "all") {\n                        if (!afwdAttrs.includes("all"))\n                            groupedAttrsReserved = afwdAttrs;\n                        afwdAttrs = ["all"];\n                        afwdMenuItemElsExceptAll.forEach((el) => {\n                            el.classList.add("b3-menu__item--disabled");\n                            el.querySelector("input").disabled = true;\n                        });\n                    }\n                    else\n                        afwdAttrs.push(curAttrItem);\n                }\n                (0, api_1.setBlockAttrs)(curBlockId, { "custom-afwd": afwdAttrs.join(" ") || "" });\n            };\n        });\n        // set doc blocks tdir menu funcs\n        tdirMenuItemEls === null || tdirMenuItemEls === void 0 ? void 0 : tdirMenuItemEls.forEach((el, index, arr) => {\n            el.onclick = () => {\n                const attr = el["id"].split("-")[1]; // \'ltr\' or \'rtl\'\n                const isSelected = el.classList.contains("b3-menu__item--selected");\n                if (isSelected) {\n                    el.classList.remove("b3-menu__item--selected");\n                    tdirAttrs = [];\n                }\n                else {\n                    tdirAttrs = [attr];\n                    el.classList.add("b3-menu__item--selected");\n                    arr[1 - index].classList.remove("b3-menu__item--selected");\n                }\n                (0, api_1.setBlockAttrs)(curBlockId, { "custom-tdir": `${tdirAttrs.join("")}` });\n            };\n        });\n    }\n    // set indoc blocks afwd menu funcs\n    else {\n        afwdMenuItemEls === null || afwdMenuItemEls === void 0 ? void 0 : afwdMenuItemEls.forEach((el, index, arr) => {\n            el.onclick = () => {\n                const attr = el["id"].split("-")[1]; // \'on\' | \'off\'\n                const isSelected = el.classList.contains("b3-menu__item--selected");\n                if (isSelected) {\n                    afwdAttrs = [];\n                    el.classList.remove("b3-menu__item--selected");\n                }\n                else {\n                    afwdAttrs = [attr];\n                    el.classList.add("b3-menu__item--selected");\n                    arr[1 - index].classList.remove("b3-menu__item--selected");\n                }\n                (0, api_1.setBlockAttrs)(curBlockId, { "custom-afwd": (afwdAttrs === null || afwdAttrs === void 0 ? void 0 : afwdAttrs.join(" ")) || "" });\n            };\n        });\n    }\n    // functionality of afwd clear button\n    const afwdClearBtn = document.getElementById("afwdMenuItem-clear");\n    if (!afwdClearBtn)\n        return;\n    afwdClearBtn.onclick = () => {\n        afwdAttrs = [];\n        groupedAttrsReserved = [];\n        (0, api_1.setBlockAttrs)(curBlockId, { "custom-afwd": "" });\n        afwdMenuItemEls.forEach((el) => {\n            el.classList.remove("b3-menu__item--disabled");\n            el.classList.remove("b3-menu__item--selected");\n            if (isDoc) {\n                const inputEl = el.querySelector("input");\n                inputEl.disabled = false;\n                inputEl.checked = false;\n            }\n        });\n    };\n    // functionality of tdir clear button\n    if (!isDoc)\n        return;\n    const tdirClearBtn = document.getElementById("tdirMenuItem-clear");\n    if (!tdirClearBtn)\n        return;\n    tdirClearBtn.onclick = () => {\n        tdirAttrs = [];\n        (0, api_1.setBlockAttrs)(curBlockId, { "custom-tdir": "" });\n        tdirMenuItemEls.forEach((el) => {\n            el.classList.remove("b3-menu__item--selected");\n        });\n    };\n}\nfunction removeProtyleSpacings() {\n    interfaceState_1.wndElements === null || interfaceState_1.wndElements === void 0 ? void 0 : interfaceState_1.wndElements.forEach((wnd) => {\n        let protyles = wnd.querySelector(".file-tree") ? [] : wnd.querySelectorAll(".protyle-wysiwyg");\n        protyles.forEach((protyle) => {\n            protyle.style.removeProperty("--protyle-spacing");\n            protyle.dataset.prevpadding = undefined;\n        });\n    });\n}\n\n\n//# sourceURL=webpack://asri/./src/modules/afwd.ts?')},"./src/modules/asriPalettes.ts":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.paletteMenuItemClickEventListener = exports.tfpMenuItemCallbackEventListener = exports.followSysAccentColor = exports.i18n = void 0;\nexports.loadThemePalette = loadThemePalette;\nexports.unloadThemePalette = unloadThemePalette;\nexports.loadI18n = loadI18n;\nexports.createBarModeMenuItems = createBarModeMenuItems;\nexports.getSystemAccentColor = getSystemAccentColor;\nconst api_1 = __webpack_require__(/*! ../util/api */ "./src/util/api.ts");\nconst electron_1 = __webpack_require__(/*! ../util/electron */ "./src/util/electron.ts");\nconst eventListeners_1 = __webpack_require__(/*! ../util/eventListeners */ "./src/util/eventListeners.ts");\nconst misc_1 = __webpack_require__(/*! ../util/misc */ "./src/util/misc.ts");\nconst rsc_1 = __webpack_require__(/*! ../util/rsc */ "./src/util/rsc.ts");\nconst modeTransition_1 = __webpack_require__(/*! ./modeTransition */ "./src/modules/modeTransition.ts");\nconst asriConfigs = {\n    "light": {\n        "followSysAccentColor": false,\n        "chroma": "1",\n        "userCustomColor": "#3478f6",\n        "presetPalette": "",\n    },\n    "dark": {\n        "followSysAccentColor": false,\n        "chroma": "1",\n        "userCustomColor": "#3478f6",\n        "presetPalette": "",\n    },\n    "features": {\n        "tfp": "",\n    },\n};\nlet curMode;\nconst debounceChramaValueSaving = (0, misc_1.debounce)(updateAsriConfigs, 200);\nlet sysAccentColor;\nlet isSysAccentGray = false, isUserAccentGray = false;\nlet followSysAccentBtn, pickColorBtn, asriChromaSlider, colorPicker, topbarFusionPlusBtn, tfpProgressiveBtn, tfpAcrylicBtn;\nexports.followSysAccentColor = false;\nfunction loadThemePalette() {\n    return __awaiter(this, void 0, void 0, function* () {\n        // if (env.isIOSApp) return; // fix app crash\n        // i18n = await loadI18n();\n        curMode = rsc_1.environment.appSchemeMode;\n        getAsriConfigs().then(() => {\n            if (!rsc_1.environment.supportOklch)\n                return;\n            // check local configs to set initial theme color\n            if (!(rsc_1.environment.isInBrowser || rsc_1.environment.isMobile || rsc_1.environment.isLinux)) {\n                if (exports.followSysAccentColor) {\n                    document.documentElement.style.removeProperty("--asri-user-custom-accent");\n                }\n                else {\n                    document.documentElement.style.setProperty("--asri-user-custom-accent", asriConfigs[curMode].userCustomColor);\n                    reverseOnPrimaryLightness(asriConfigs[curMode].userCustomColor);\n                }\n            }\n            else {\n                document.documentElement.style.setProperty("--asri-user-custom-accent", asriConfigs[curMode].userCustomColor);\n                reverseOnPrimaryLightness(asriConfigs[curMode].userCustomColor);\n            }\n            if (asriConfigs[curMode].presetPalette) {\n                const paletteID = asriConfigs[curMode].presetPalette;\n                const curPalette = asriPrstPalettes[paletteID][curMode];\n                document.documentElement.setAttribute("data-asri-palette", paletteID.split("-")[2]);\n                exports.followSysAccentColor = false;\n                document.documentElement.style.setProperty("--asri-user-custom-accent", curPalette.primary);\n                document.documentElement.style.setProperty("--asri-c-factor", curPalette.chroma);\n                isUserAccentGray = curPalette.chroma === "0" ? true : false;\n                handleGrayScale(curPalette.chroma);\n                reverseOnPrimaryLightness(curPalette.primary);\n            }\n            else {\n                document.documentElement.style.setProperty("--asri-c-factor", asriConfigs[curMode].chroma);\n                document.documentElement.removeAttribute("data-asri-palette");\n                isUserAccentGray = asriConfigs[curMode].chroma === "0" ? true : false;\n                handleGrayScale(asriConfigs[curMode].chroma);\n            }\n            getSystemAccentColor();\n            if (asriConfigs.features.tfp) {\n                document.body.classList.add("asri-tfp", "asri-tfp-" + asriConfigs.features.tfp);\n            }\n        });\n        // env.supportOklch && asriDoms.barMode?.addEventListener("click", customizeThemeColor);\n    });\n}\nfunction unloadThemePalette() {\n    document.documentElement.style.removeProperty("--asri-user-custom-accent");\n    document.documentElement.style.removeProperty("--asri-sys-accent-grayscale");\n    document.documentElement.style.removeProperty("--asri-c-factor");\n    document.documentElement.style.removeProperty("--asri-sys-accent");\n    document.documentElement.style.removeProperty("--asri-sys-accent-accessible");\n    document.documentElement.style.removeProperty("--asri-c-0");\n    document.documentElement.style.removeProperty("--asri-on-primary-reverse");\n    // asriDoms.barMode?.removeEventListener("click", customizeThemeColor);\n    document.querySelectorAll(".asri-config").forEach((el) => el.remove());\n}\nfunction loadI18n() {\n    return __awaiter(this, void 0, void 0, function* () {\n        let res;\n        try {\n            if (["zh_CN", "zh_CHT", "en_US", "ar_SA"].includes(rsc_1.environment.lang)) {\n                res = yield fetch(`/appearance/themes/Asri/i18n/${rsc_1.environment.lang}.json`);\n            }\n            else {\n                res = yield fetch("/appearance/themes/Asri/i18n/en_US.json");\n            }\n            exports.i18n = yield res.json();\n            return exports.i18n;\n        }\n        catch (error) {\n            console.error("failed to load i18n:", error);\n            throw error;\n        }\n    });\n}\nfunction getAsriConfigs() {\n    return __awaiter(this, void 0, void 0, function* () {\n        console.log("curMode", curMode);\n        yield (0, api_1.getFile)("/data/snippets/Asri.config.json")\n            .then((response) => {\n            if (response && response.status === 200) {\n                return response.json();\n            }\n            return null;\n        })\n            .then((data) => {\n            var _a, _b, _c;\n            if (!data) {\n                exports.followSysAccentColor = asriConfigs[curMode].followSysAccentColor;\n                return;\n            }\n            /**\n                  https://github.com/mustakshif/Asri/issues/165 这个写法导致当config数据不全时，updateAsriConfigs()会形成循坏引用，从而无法储存主题配置\n      \n                  // // 如果本地配置数据中没有light或dark，则将旧数据赋值给asriConfigs\n                  // let originalData: any;\n      \n                  // if (!(data[\'light\'])) {\n                  //     originalData = data;\n                  //     Object.keys(asriConfigs).forEach(key => {\n                  //         data[key as keyof typeof asriConfigs] = originalData;\n                  //     })\n                  // }\n      \n                  // if (!(data.features)) {\n                  //     data.features = asriConfigs.features;\n                  // }\n                  **/\n            // 如果本地配置缺失数据，则赋与默认值\n            for (let key in asriConfigs) {\n                if (!(key in data)) {\n                    data[key] = asriConfigs[key];\n                }\n            }\n            const modes = ["light", "dark"];\n            for (const mode of modes) {\n                asriConfigs[mode].followSysAccentColor = !!data[mode].followSysAccentColor;\n                asriConfigs[mode].chroma = (_a = data[mode].chroma) !== null && _a !== void 0 ? _a : "1";\n                asriConfigs[mode].userCustomColor = (_b = data[mode].userCustomColor) !== null && _b !== void 0 ? _b : "#3478f6";\n                asriConfigs[mode].presetPalette = (_c = data[mode].presetPalette) !== null && _c !== void 0 ? _c : "";\n            }\n            asriConfigs.features = data.features;\n            exports.followSysAccentColor = !!data[curMode].followSysAccentColor;\n        });\n    });\n}\nfunction updateAsriConfigs() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield (0, api_1.putFile)("/data/snippets/Asri.config.json", JSON.stringify(asriConfigs, undefined, 4));\n    });\n}\n// async function customizeThemeColor() {\n//     if (!Object.keys(i18n).length) i18n = await loadI18n();\n//     // create menu items and handle click events\n//     setTimeout(createMenuItems, 0);\n// }\nconst asriPrstPalettes = {\n    "prst-palette-auriflow": {\n        "dark": {\n            "primary": "#D2B983",\n            "chroma": "0.3",\n            "followSysAccentColor": false,\n        },\n        "light": {\n            "primary": "#F4D18B",\n            "chroma": "0",\n            "followSysAccentColor": false,\n        },\n    },\n    "prst-palette-everbliss": {\n        "dark": {\n            "primary": "#13012a",\n            "chroma": "1.5",\n            "followSysAccentColor": false,\n        },\n        "light": {\n            "primary": "#F4CA57",\n            "chroma": "2.8",\n            "followSysAccentColor": false,\n        },\n    },\n    "prst-palette-aerisland": {\n        "dark": {\n            "primary": "#111a3f",\n            "chroma": "2",\n            "followSysAccentColor": false,\n        },\n        "light": {\n            "primary": "#e6f9db", // 饱和度需要高一点，修复Safari显示为红色的问题\n            "chroma": "2",\n            "followSysAccentColor": false,\n        },\n    },\n    "prst-palette-zerith": {\n        "dark": {\n            "primary": "#ABC3D9",\n            "chroma": "2.4",\n            "followSysAccentColor": false,\n        },\n        "light": {\n            "primary": "#C2E2DF",\n            "chroma": "0.7",\n            "followSysAccentColor": false,\n        },\n    },\n    // \'prst-palette-polar\': {\n    //     \'dark\': {\n    //         \'primary\': \'#E6E9EF\',\n    //         \'chroma\': \'0\',\n    //         \'followSysAccentColor\': false,\n    //     },\n    //     \'light\': {\n    //         \'primary\': \'#1B1C1D\',\n    //         \'chroma\': \'0\',\n    //         \'followSysAccentColor\': false,\n    //     }\n    // },\n};\nconst paletteMenuItem = (paletteID) => {\n    const displayName = exports.i18n[paletteID] || paletteID;\n    return `<button class="b3-menu__item asri-config" id="${paletteID}"><svg class="b3-menu__icon" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M19 3h-4a2 2 0 0 0-2 2v12a4 4 0 0 0 8 0V5a2 2 0 0 0-2-2"/><path d="m13 7.35l-2-2a2 2 0 0 0-2.828 0L5.344 8.178a2 2 0 0 0 0 2.828l9 9"/><path d="M7.3 13H5a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h12m0-4v.01"/></g></svg><span class="b3-menu__label">${displayName}</span></button>`;\n};\nfunction createBarModeMenuItems(e) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        if (e.type !== "mouseup")\n            return;\n        if (!Object.keys(exports.i18n).length)\n            exports.i18n = yield loadI18n();\n        const target = e.target;\n        const targetItem = target.closest(".toolbar__item");\n        if (!targetItem)\n            return;\n        // use existing menu items if any\n        if (document.querySelector(".asri-config"))\n            return;\n        // create menu items when there is no existing menu items\n        let barModeMenuItems = yield (0, misc_1.querySelectorAsync)(\'#commonMenu[data-name="barmode"] .b3-menu__items\', document, 2, 0);\n        if (!barModeMenuItems)\n            return;\n        const asriConfigMenuHTML = `\n        <button class="b3-menu__separator asri-config"></button>\n        <div class="menu-item__subtitle" style="user-select: none;">${exports.i18n["palette-presets"]}</div>\n        ${Object.keys(asriPrstPalettes)\n            .map((paletteID) => paletteMenuItem(paletteID))\n            .join("")}\n        <button class="b3-menu__separator asri-config"></button>\n        <button class="b3-menu__item asri-config" id="pickColor">\n            <svg class="b3-menu__icon"></svg>\n            <input id="asriColorPicker" type="color" value="${asriConfigs[curMode].userCustomColor}">\n            <label for="asriColorPicker" class="be-menu__label">${exports.i18n["pickColor"]}</label>\n        </button>\n        <button class="b3-menu__item asri-config" id="followSysAccent">\n            <svg class="b3-menu__icon"></svg>\n            <label for="" class="be-menu__label">${exports.i18n["followSysAccent"]}</label>\n        </button>\n        <button class="b3-menu__item asri-config" data-type="nobg" id="asriChroma">\n            <svg class="b3-menu__icon" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24">\n                <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 11l-8-8l-8.6 8.6a2 2 0 0 0 0 2.8l5.2 5.2c.8.8 2 .8 2.8 0zM5 2l5 5m-8 6h15m5 7a2 2 0 1 1-4 0c0-1.6 1.7-2.4 2-4c.3 1.6 2 2.4 2 4" />\n            </svg>\n            <div aria-label="${exports.i18n["asriChroma"] + ((_b = (_a = asriChromaSlider === null || asriChromaSlider === void 0 ? void 0 : asriChromaSlider.value) !== null && _a !== void 0 ? _a : asriConfigs[curMode].chroma) !== null && _b !== void 0 ? _b : "1")}" class="b3-tooltips b3-tooltips__n">\n                <input style="box-sizing: border-box" type="range" id="asriChromaSlider" class="b3-slider fn__block" min="0" max="5" step="0.1" value="1">\n            </div>\n        </button>\n        <button class="b3-menu__separator asri-config"></button>\n        <button class="b3-menu__item asri-config" id="topbarFusionPlus"></button>\n`;\n        const asriConfigFrag = document.createRange().createContextualFragment(asriConfigMenuHTML);\n        barModeMenuItems.appendChild(asriConfigFrag);\n        // set funcitons for menu items\n        followSysAccentBtn = document.getElementById("followSysAccent");\n        pickColorBtn = document.getElementById("pickColor");\n        asriChromaSlider = document.getElementById("asriChromaSlider");\n        colorPicker = pickColorBtn.querySelector("input");\n        topbarFusionPlusBtn = document.getElementById("topbarFusionPlus");\n        topbarFusionPlusBtn.innerHTML = `\n        <svg class="b3-menu__icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 22"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="m8 10.5l6.492-6.492M13.496 16L20 9.496zm-4.91-.586L19.413 4.587M8 6a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2z"/><path d="M16 16v2a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2"/></g></svg>\n        <span class="b3-menu__label" style="display: flex">${exports.i18n["topbarFusionPlus"]}<svg data-position="north" class="b3-menu__icon ariaLabel asri-experimental" aria-label=${\'"\' + exports.i18n["tfp-experimental"] + \'"\'} style="vertical-align: -.1em; height: .8em; width: .8em; opacity: .5; padding-inline-start: .1em; margin-right: unset;margin-inline-start: auto; margin-inline-end: 0;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 23 23"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M14 2v6a2 2 0 0 0 .245.96l5.51 10.08A2 2 0 0 1 18 22H6a2 2 0 0 1-1.755-2.96l5.51-10.08A2 2 0 0 0 10 8V2M6.453 15h11.094M8.5 2h7"/></svg></span>\n        <svg class="b3-menu__icon b3-menu__icon--small">\n            <use xlink:href="#iconRight"></use>\n        </svg>\n        <div class="b3-menu__submenu">\n            <div class="b3-menu__items">\n                <button class="b3-menu__item" id="tfp-progressive">\n                    <svg class="b3-menu__icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 22"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="m8 10.5l6.492-6.492M13.496 16L20 9.496zm-4.91-.586L19.413 4.587M8 6a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2z"/><path d="M16 16v2a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2"/></g></svg>\n                    <span class="b3-menu__label">${exports.i18n["tfp-progressive"]}</span>\n                </button>\n                <button class="b3-menu__item" id="tfp-acrylic">\n                    <svg class="b3-menu__icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 22"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="m8 10.5l6.492-6.492M13.496 16L20 9.496zm-4.91-.586L19.413 4.587M8 6a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2z"/><path d="M16 16v2a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2"/></g></svg>\n                    <span class="b3-menu__label">${exports.i18n["tfp-acrylic"]}</span>\n                </button>                \n                <button class="b3-menu__separator"></button>\n                <button class="b3-menu__item" id="tfp-disable">\n                    <svg class="b3-menu__icon" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24">\n                        <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><circle cx="12" cy="12" r="10"/><path d="m15 9l-6 6m0-6l6 6"/></g>\n                    </svg>\n                    <span class="b3-menu__label">${exports.i18n["tfp-disable"]}</span>\n                </button>\n            </div>\n        </div>\n    `;\n        if (!followSysAccentBtn || !pickColorBtn || !asriChromaSlider || !colorPicker)\n            return;\n        initMenuItems();\n        initAsriConfigMenuItemClick();\n    });\n}\nexports.tfpMenuItemCallbackEventListener = new eventListeners_1.AsriEventListener(tfpMenuItemCallback);\nfunction tfpMenuItemCallback(e) {\n    const target = e.target.closest(\'[id^="tfp-"]\');\n    if (!target)\n        return;\n    const tfpMenuItems = document.querySelectorAll(\'[id^="tfp-"]\');\n    if (target.id === "tfp-disable") {\n        document.body.classList.remove("asri-tfp-acrylic", "asri-tfp-progressive", "asri-tfp");\n        tfpMenuItems.forEach((item) => {\n            item.classList.remove("b3-menu__item--selected");\n        });\n        asriConfigs.features.tfp = "";\n    }\n    else {\n        if (target.classList.contains("b3-menu__item--selected")) {\n            document.body.classList.remove("asri-tfp", target.id.replace("tfp-", "asri-tfp-"));\n            asriConfigs.features.tfp = "";\n        }\n        else {\n            tfpMenuItems.forEach((item) => {\n                item.classList.remove("b3-menu__item--selected");\n            });\n            document.body.classList.remove("asri-tfp-acrylic", "asri-tfp-progressive");\n            document.body.classList.add("asri-tfp", target.id.replace("tfp-", "asri-tfp-"));\n            asriConfigs.features.tfp = target.id.replace("tfp-", "");\n        }\n        target.classList.toggle("b3-menu__item--selected");\n    }\n    updateAsriConfigs();\n}\nfunction initMenuItems() {\n    // check local configs to determine the initial state of the menu items\n    const asriChromaBtn = document.getElementById("asriChroma");\n    tfpProgressiveBtn = document.getElementById("tfp-progressive");\n    tfpAcrylicBtn = document.getElementById("tfp-acrylic");\n    if (asriConfigs[curMode].presetPalette) {\n        pickColorBtn === null || pickColorBtn === void 0 ? void 0 : pickColorBtn.classList.add("b3-menu__item--disabled");\n        followSysAccentBtn === null || followSysAccentBtn === void 0 ? void 0 : followSysAccentBtn.classList.add("b3-menu__item--disabled");\n        asriChromaBtn === null || asriChromaBtn === void 0 ? void 0 : asriChromaBtn.classList.add("b3-menu__item--disabled");\n    }\n    followSysAccentBtn.classList.toggle("b3-menu__item--selected", !asriConfigs[curMode].presetPalette && exports.followSysAccentColor);\n    pickColorBtn.classList.toggle("b3-menu__item--selected", !asriConfigs[curMode].presetPalette && !exports.followSysAccentColor);\n    asriChromaSlider.value = asriConfigs[curMode].chroma || "1";\n    asriChromaSlider.parentElement.ariaLabel = exports.i18n["asriChroma"] + asriConfigs[curMode].chroma;\n    if (asriConfigs[curMode].presetPalette) {\n        const curPalette = document.getElementById(`${asriConfigs[curMode].presetPalette}`);\n        curPalette === null || curPalette === void 0 ? void 0 : curPalette.classList.add("b3-menu__item--selected");\n    }\n    if (tfpProgressiveBtn && tfpAcrylicBtn) {\n        tfpProgressiveBtn.classList.toggle("b3-menu__item--selected", asriConfigs.features.tfp === "progressive");\n        tfpAcrylicBtn.classList.toggle("b3-menu__item--selected", asriConfigs.features.tfp === "acrylic");\n    }\n}\nfunction initAsriConfigMenuItemClick() {\n    if (!followSysAccentBtn || !pickColorBtn || !asriChromaSlider || !colorPicker)\n        return;\n    // handle click events\n    if (rsc_1.environment.isInBrowser || rsc_1.environment.isMobile || rsc_1.environment.isLinux) {\n        // followSysAccentColor = false;\n        followSysAccentBtn.classList.add("fn__none");\n    }\n    else {\n        followSysAccentBtn.addEventListener("mouseup", handleFollowSystemAccentBtnClick);\n    }\n    pickColorBtn.addEventListener("click", handlePickColorBtnClick);\n    colorPicker.addEventListener("input", handleColorPickerInput);\n    colorPicker.addEventListener("change", handleColorPickerChange);\n    asriChromaSlider.addEventListener("input", handleChromaSliderInput);\n}\nfunction handleFollowSystemAccentBtnClick() {\n    // if (followSysAccentBtn?.classList.contains(\'b3-menu__item--disabled\')) return;\n    (0, modeTransition_1.startFadeInFadeOutTranstition)(600, () => {\n        document.querySelectorAll(".asri-config.b3-menu__item--selected").forEach((el) => el.classList.remove("b3-menu__item--selected"));\n        if (!asriConfigs[curMode].followSysAccentColor) {\n            exports.followSysAccentColor = true;\n            followSysAccentBtn.classList.add("b3-menu__item--selected");\n            // pickColorBtn!.classList.remove(\'b3-menu__item--selected\');\n            document.documentElement.style.removeProperty("--asri-user-custom-accent");\n            asriConfigs[curMode].followSysAccentColor = true;\n            getSystemAccentColor();\n        }\n        else {\n            exports.followSysAccentColor = false;\n            // followSysAccentBtn!.classList.remove(\'b3-menu__item--selected\');\n            pickColorBtn.classList.add("b3-menu__item--selected");\n            document.documentElement.style.setProperty("--asri-user-custom-accent", asriConfigs[curMode].userCustomColor || sysAccentColor || "#3478f6");\n            handleGrayScale(asriConfigs[curMode].chroma);\n            reverseOnPrimaryLightness(asriConfigs[curMode].userCustomColor || sysAccentColor || "#3478f6");\n            asriConfigs[curMode].followSysAccentColor = false;\n        }\n        updateAsriConfigs();\n    });\n}\nfunction handlePickColorBtnClick(event) {\n    // if (pickColorBtn?.classList.contains(\'b3-menu__item--disabled\')) {\n    //     event.preventDefault();\n    //     return;\n    // };\n    // document.querySelectorAll(\'.asri-config.b3-menu__item--selected\').forEach(el => el.classList.remove(\'b3-menu__item--selected\'));\n    (0, modeTransition_1.startFadeInFadeOutTranstition)(600, () => {\n        if (!exports.followSysAccentColor)\n            return;\n        exports.followSysAccentColor = false;\n        followSysAccentBtn.classList.remove("b3-menu__item--selected");\n        pickColorBtn.classList.add("b3-menu__item--selected");\n        document.documentElement.style.setProperty("--asri-user-custom-accent", asriConfigs[curMode].userCustomColor);\n        handleGrayScale(asriConfigs[curMode].chroma);\n        reverseOnPrimaryLightness(asriConfigs[curMode].userCustomColor);\n        asriConfigs[curMode].userCustomColor = asriConfigs[curMode].userCustomColor;\n        asriConfigs[curMode].followSysAccentColor = false;\n        updateAsriConfigs();\n    });\n}\nfunction handleColorPickerInput() {\n    const hexColor = colorPicker.value;\n    document.documentElement.style.setProperty("--asri-user-custom-accent", hexColor);\n    reverseOnPrimaryLightness(hexColor);\n}\nfunction handleColorPickerChange() {\n    followSysAccentBtn.classList.remove("b3-menu__item--selected");\n    pickColorBtn.classList.add("b3-menu__item--selected");\n    reverseOnPrimaryLightness(colorPicker.value);\n    asriConfigs[curMode].userCustomColor = colorPicker.value;\n    exports.followSysAccentColor = false;\n    asriConfigs[curMode].followSysAccentColor = false;\n    updateAsriConfigs();\n}\nfunction handleChromaSliderInput() {\n    // if (asriChromaSlider?.classList.contains(\'b3-menu__item--disabled\')) {\n    //     this.value = asriConfigs[curMode].chroma;\n    //     return;\n    // }\n    const chromaValue = this.value;\n    document.documentElement.style.setProperty("--asri-c-factor", chromaValue);\n    this.parentElement.ariaLabel = exports.i18n["asriChroma"] + chromaValue;\n    asriConfigs[curMode].chroma = chromaValue;\n    isUserAccentGray = chromaValue === "0" ? true : false;\n    handleGrayScale(chromaValue);\n    debounceChramaValueSaving();\n}\nfunction getSystemAccentColor() {\n    if (!(rsc_1.environment.isInBrowser || rsc_1.environment.isMobile || rsc_1.environment.isLinux)) {\n        const accent = electron_1.remote.systemPreferences.getAccentColor();\n        const accentHex = "#" + accent.slice(0, 6);\n        const accentHsl = (0, misc_1.hexToHSL)(accentHex);\n        if (!accentHsl)\n            return;\n        if (sysAccentColor !== accentHex) {\n            document.documentElement.style.setProperty("--asri-sys-accent", accentHex);\n            if (accentHsl.s > 0.28)\n                document.documentElement.style.setProperty("--asri-sys-accent-accessible", accentHex);\n            else\n                document.documentElement.style.removeProperty("--asri-sys-accent-accessible");\n            isSysAccentGray = accentHsl.s === 0 ? true : false;\n            // document.body.classList.add(\'asri-mode-transition\');\n            // setTimeout(() => {\n            //     document.body.classList.remove(\'asri-mode-transition\');\n            // }, 350);\n            sysAccentColor = accentHex;\n        }\n        if (exports.followSysAccentColor) {\n            handleGrayScale(accentHsl.s);\n            reverseOnPrimaryLightness(accentHex);\n        }\n    }\n}\n/**\n * decide if use grayscale or not, if so return true, otherwise return false\n * @param {string | number} chroma\n * @returns boolean\n */\nfunction handleGrayScale(chroma) {\n    // console.log(\'chroma\', chroma, \'followSysAccentColor\', followSysAccentColor, \'isSysAccentGray\', isSysAccentGray, \'isUserAccentGray\', isUserAccentGray);\n    const chromaValue = String(chroma);\n    if (chromaValue === "0" || (exports.followSysAccentColor && isSysAccentGray) || isUserAccentGray) {\n        document.documentElement.style.setProperty("--asri-c-0", "0");\n        return true;\n    }\n    else {\n        document.documentElement.style.removeProperty("--asri-c-0");\n        return false;\n    }\n}\nconst reverseThreshold = rsc_1.environment.appSchemeMode === "light" ? 0.81 : 0.79;\nfunction reverseOnPrimaryLightness(hex) {\n    const lightness = (0, misc_1.hexToOklchL)(hex);\n    if (!lightness)\n        return;\n    if (lightness > reverseThreshold) {\n        document.documentElement.style.setProperty("--asri-on-primary-reverse", rsc_1.environment.appSchemeMode === "light" ? ".4" : ".3");\n    }\n    else {\n        document.documentElement.style.removeProperty("--asri-on-primary-reverse");\n    }\n}\nexports.paletteMenuItemClickEventListener = new eventListeners_1.AsriEventListener(paletteMenuItemCallback);\nfunction paletteMenuItemCallback(e) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const target = e.target.closest(\'[id^="prst-palette-"]\');\n        if (!target)\n            return;\n        const asriChromaBtn = document.getElementById("asriChroma");\n        const paletteID = target.id;\n        const curPalette = asriPrstPalettes[paletteID][curMode];\n        document.querySelectorAll(\'[id^="prst-palette-"]\').forEach((el) => el.classList.remove("b3-menu__item--selected"));\n        (0, modeTransition_1.startFadeInFadeOutTranstition)(600, () => {\n            if (asriConfigs[curMode].presetPalette === paletteID) {\n                // 取消预设色板\n                target.classList.remove("b3-menu__item--selected");\n                document.documentElement.removeAttribute("data-asri-palette");\n                pickColorBtn === null || pickColorBtn === void 0 ? void 0 : pickColorBtn.classList.remove("b3-menu__item--disabled");\n                followSysAccentBtn === null || followSysAccentBtn === void 0 ? void 0 : followSysAccentBtn.classList.remove("b3-menu__item--disabled");\n                asriChromaBtn === null || asriChromaBtn === void 0 ? void 0 : asriChromaBtn.classList.remove("b3-menu__item--disabled");\n                asriConfigs[curMode].presetPalette = "";\n                // updateMenuItems();\n                exports.followSysAccentColor = asriConfigs[curMode]["followSysAccentColor"];\n                if (exports.followSysAccentColor) {\n                    followSysAccentBtn.classList.add("b3-menu__item--selected");\n                    document.documentElement.style.removeProperty("--asri-user-custom-accent");\n                    asriConfigs[curMode].followSysAccentColor = true;\n                    getSystemAccentColor();\n                }\n                else {\n                    pickColorBtn.classList.add("b3-menu__item--selected");\n                    document.documentElement.style.setProperty("--asri-user-custom-accent", asriConfigs[curMode].userCustomColor || sysAccentColor || "#3478f6");\n                    asriConfigs[curMode].followSysAccentColor = false;\n                }\n                document.documentElement.style.setProperty("--asri-c-factor", asriConfigs[curMode].chroma);\n                isUserAccentGray = asriConfigs[curMode].chroma === "0" ? true : false;\n                handleGrayScale(asriConfigs[curMode].chroma);\n                reverseOnPrimaryLightness(!exports.followSysAccentColor ? asriConfigs[curMode].userCustomColor : sysAccentColor);\n                updateAsriConfigs();\n            }\n            else {\n                // 应用预设色板\n                target.classList.add("b3-menu__item--selected");\n                document.documentElement.setAttribute("data-asri-palette", paletteID.split("-")[2]);\n                pickColorBtn === null || pickColorBtn === void 0 ? void 0 : pickColorBtn.classList.add("b3-menu__item--disabled");\n                followSysAccentBtn === null || followSysAccentBtn === void 0 ? void 0 : followSysAccentBtn.classList.add("b3-menu__item--disabled");\n                asriChromaBtn === null || asriChromaBtn === void 0 ? void 0 : asriChromaBtn.classList.add("b3-menu__item--disabled");\n                exports.followSysAccentColor = false;\n                followSysAccentBtn.classList.remove("b3-menu__item--selected");\n                pickColorBtn.classList.remove("b3-menu__item--selected");\n                document.documentElement.style.setProperty("--asri-user-custom-accent", curPalette.primary);\n                document.documentElement.style.setProperty("--asri-c-factor", curPalette.chroma);\n                isUserAccentGray = curPalette.chroma === "0" ? true : false;\n                handleGrayScale(curPalette.chroma);\n                reverseOnPrimaryLightness(curPalette.primary);\n                // 写入预设色板数据\n                asriConfigs[curMode].presetPalette = paletteID;\n                updateAsriConfigs();\n            }\n        });\n    });\n}\n\n\n//# sourceURL=webpack://asri/./src/modules/asriPalettes.ts?')},"./src/modules/docks.ts":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.updateDockLBgAndBorder = updateDockLBgAndBorder;\nexports.addDockbClassName = addDockbClassName;\nexports.removeDockbClassName = removeDockbClassName;\nexports.destroyDockBg = destroyDockBg;\nconst misc_1 = __webpack_require__(/*! ../util/misc */ "./src/util/misc.ts");\nconst rsc_1 = __webpack_require__(/*! ../util/rsc */ "./src/util/rsc.ts");\nconst interfaceState_1 = __webpack_require__(/*! ../util/interfaceState */ "./src/util/interfaceState.ts");\nfunction updateDockLBgAndBorder() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const dockL = rsc_1.asriDoms.dockL ? rsc_1.asriDoms.dockL : yield (0, misc_1.querySelectorAsync)("#dockLeft");\n        if (!rsc_1.asriDoms.layoutDockL)\n            yield (0, misc_1.querySelectorAsync)(".layout__dockl");\n        const dockR = rsc_1.asriDoms.dockR;\n        for (let dock of [dockL, dockR]) {\n            let isDockLLytPinned = (0, interfaceState_1.isDockLytPinned)(dock === dockL ? "L" : "R"), isDockLLytExpanded = (0, interfaceState_1.isDockLytExpanded)(dock === dockL ? "L" : "R");\n            // console.log(\'measure: dock\' , dock)\n            if (isDockLLytPinned && isDockLLytExpanded) {\n                dock === null || dock === void 0 ? void 0 : dock.classList.add("dock-layout-expanded");\n            }\n            else {\n                dock === null || dock === void 0 ? void 0 : dock.classList.remove("dock-layout-expanded");\n            }\n            // console.log(\'mutate: dock\' , dock)\n        }\n    });\n}\nfunction addDockbClassName() {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c;\n        if (rsc_1.environment.isMobile)\n            return;\n        const dockbExist = yield (0, interfaceState_1.hasDockb)();\n        const dockbFloat = !(0, interfaceState_1.isDockLytPinned)("B") && (0, interfaceState_1.isDockLytExpanded)("B");\n        (_a = rsc_1.asriDoms.toolbar) === null || _a === void 0 ? void 0 : _a.nextElementSibling.classList.toggle("has-dockb", dockbExist);\n        (_b = rsc_1.asriDoms.toolbar) === null || _b === void 0 ? void 0 : _b.nextElementSibling.classList.toggle("has-layout-dockb-float", dockbFloat);\n        (_c = rsc_1.asriDoms.dockB) === null || _c === void 0 ? void 0 : _c.classList.toggle("has-layout-dockb-float", dockbFloat);\n    });\n}\nfunction removeDockbClassName() {\n    var _a, _b;\n    (_a = rsc_1.asriDoms.toolbar) === null || _a === void 0 ? void 0 : _a.nextElementSibling.classList.remove("has-dockb");\n    (_b = rsc_1.asriDoms.toolbar) === null || _b === void 0 ? void 0 : _b.nextElementSibling.classList.remove("has-layout-dockb-float");\n}\nfunction destroyDockBg() {\n    var _a;\n    (_a = document.querySelector(".dock-layout-expanded")) === null || _a === void 0 ? void 0 : _a.classList.remove("dock-layout-expanded");\n}\n\n\n//# sourceURL=webpack://asri/./src/modules/docks.ts?')},"./src/modules/env.ts":(__unused_webpack_module,exports,__webpack_require__)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.addEnvClassNames = addEnvClassNames;\nexports.removeEnvClassNames = removeEnvClassNames;\nconst rsc_1 = __webpack_require__(/*! ../util/rsc */ "./src/util/rsc.ts");\nconst envClassifiers = [\n    { condition: rsc_1.environment.isMacOS, className: "body-asri--mac" },\n    { condition: rsc_1.environment.isLinux, className: "body-asri--linux" },\n    { condition: rsc_1.environment.isMobile, className: "body-asri--mobile" },\n    { condition: rsc_1.environment.isInBrowser, className: "body-asri--browser" },\n    { condition: rsc_1.environment.isAndroid, className: "body-asri--android" },\n    { condition: rsc_1.environment.isIOSApp, className: "body-asri--iosApp" },\n    { condition: rsc_1.environment.isReadOnly, className: "body-asri--readOnly" },\n    { condition: rsc_1.environment.isSafari, className: "body-asri--safari" },\n];\nfunction addEnvClassNames() {\n    envClassifiers.forEach(({ condition, className }) => {\n        if (condition) {\n            document.body.classList.add(className);\n        }\n    });\n}\nfunction removeEnvClassNames() {\n    envClassifiers.forEach(({ className }) => {\n        document.body.classList.remove(className);\n    });\n}\n\n\n//# sourceURL=webpack://asri/./src/modules/env.ts?')},"./src/modules/focusedBlock.ts":(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.selectionChangeCallback = selectionChangeCallback;\nexports.removeFocusedBlockClass = removeFocusedBlockClass;\nfunction selectionChangeCallback(e) {\n    // fix https://github.com/mustakshif/Asri/issues/133\n    // 创建一个 Promise，等待 mouseup 事件\n    const mouseUpPromise = new Promise((resolve) => {\n        const mouseUpHandlerForSelectedBlock = () => {\n            document.removeEventListener("mouseup", mouseUpHandlerForSelectedBlock, true);\n            resolve();\n        };\n        document.addEventListener("mouseup", mouseUpHandlerForSelectedBlock, true);\n    });\n    // 创建一个 Promise，等待 0.3 秒\n    const timeoutPromise = new Promise((resolve) => {\n        setTimeout(resolve, 300);\n    });\n    // 创建一个 Promise，等待 keyup 事件\n    const keyUpPromise = new Promise((resolve) => {\n        const keyUpHandlerForSelectedBlock = () => {\n            document.removeEventListener("keyup", keyUpHandlerForSelectedBlock, true);\n            resolve();\n        };\n        document.addEventListener("keyup", keyUpHandlerForSelectedBlock, true);\n    });\n    // 使用 Promise.race 等待 mouseup 事件、keyup 事件或 0.3 秒\n    Promise.race([mouseUpPromise, keyUpPromise, timeoutPromise]).then(() => {\n        const selection = window.getSelection();\n        const range = selection && selection.rangeCount > 0 ? selection.getRangeAt(0) : null;\n        if (!range)\n            return;\n        const curNode = range.commonAncestorContainer;\n        const curParent = curNode.parentElement;\n        const curBlock = curParent ? curParent.closest("[data-node-id]") : null;\n        if (!curBlock)\n            return;\n        const curBlockType = curBlock.getAttribute("data-type");\n        removeFocusedBlockClass();\n        if (!curBlockType || ["NodeAttributeView", "NodeCodeBlock", "NodeList", "NodeHTMLBlock"].includes(curBlockType))\n            return;\n        curBlock.classList.add("asri-selected-block");\n        // console.log(selection, range, curNode, curBlock, curBlockType);\n    });\n}\nfunction removeFocusedBlockClass() {\n    document.querySelectorAll(".asri-selected-block").forEach((block) => block.classList.remove("asri-selected-block"));\n}\n// export function handleFocusedBlockChange() {\n//     const selection = window.getSelection();\n//     const range = selection && selection.rangeCount > 0 ? selection.getRangeAt(0) : null;\n//     if (!range) return;\n//     const curNode = range.commonAncestorContainer;\n//     const curParent = curNode.parentElement;\n//     const curBlock = curParent ? curNode.parentElement.closest(\'[data-node-id]\') : null;\n//     if (!curBlock) return;\n//     curParent && curParent.dir && curParent.dir === \'auto\';\n//     const curBlockType = curBlock.getAttribute(\'data-type\');\n//     document.querySelectorAll(\'.asri-selected-block\').forEach(block => block.classList.remove(\'asri-selected-block\'));\n//     if (curBlockType === \'NodeAttributeView\' || !curBlockType || curBlockType === \'NodeCodeBlock\') return;\n//     curBlock.classList.add(\'asri-selected-block\');\n// }\n\n\n//# sourceURL=webpack://asri/./src/modules/focusedBlock.ts?')},"./src/modules/index.ts":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.loadAsriJSModules = loadAsriJSModules;\nexports.unloadAsriJSModules = unloadAsriJSModules;\nconst eventListeners_1 = __webpack_require__(/*! ../util/eventListeners */ "./src/util/eventListeners.ts");\nconst interfaceState_1 = __webpack_require__(/*! ../util/interfaceState */ "./src/util/interfaceState.ts");\nconst misc_1 = __webpack_require__(/*! ../util/misc */ "./src/util/misc.ts");\nconst observers_1 = __webpack_require__(/*! ../util/observers */ "./src/util/observers.ts");\nconst rsc_1 = __webpack_require__(/*! ../util/rsc */ "./src/util/rsc.ts");\nconst afwd_1 = __webpack_require__(/*! ./afwd */ "./src/modules/afwd.ts");\nconst asriPalettes_1 = __webpack_require__(/*! ./asriPalettes */ "./src/modules/asriPalettes.ts");\nconst docks_1 = __webpack_require__(/*! ./docks */ "./src/modules/docks.ts");\nconst env_1 = __webpack_require__(/*! ./env */ "./src/modules/env.ts");\nconst focusedBlock_1 = __webpack_require__(/*! ./focusedBlock */ "./src/modules/focusedBlock.ts");\nconst modeTransition_1 = __webpack_require__(/*! ./modeTransition */ "./src/modules/modeTransition.ts");\nconst protyleStatus_1 = __webpack_require__(/*! ./protyleStatus */ "./src/modules/protyleStatus.ts");\nconst scrollbar_1 = __webpack_require__(/*! ./scrollbar */ "./src/modules/scrollbar.ts");\nconst sidepanels_1 = __webpack_require__(/*! ./sidepanels */ "./src/modules/sidepanels.ts");\nconst status_1 = __webpack_require__(/*! ./status */ "./src/modules/status.ts");\nconst topbarFusion_1 = __webpack_require__(/*! ./topbarFusion */ "./src/modules/topbarFusion.ts");\nconst trafficLights_1 = __webpack_require__(/*! ./trafficLights */ "./src/modules/trafficLights.ts");\nconst globalClickEventListener = new eventListeners_1.AsriEventListener(lowFreqEventsCallback);\nconst globalDragEventListener = new eventListeners_1.AsriEventListener(lowFreqEventsCallback);\nconst globalKeyupEventListener = new eventListeners_1.AsriEventListener(lowFreqEventsCallback);\nconst winFocusChangeEventListener = new eventListeners_1.AsriEventListener(winFocusChangeCallback);\nconst selectionChangeEventListener = new eventListeners_1.AsriEventListener(focusedBlock_1.selectionChangeCallback);\n// const watchImgExportMo = new AsriMutationObserver(debounce(docBodyMoCallback));\nconst globalClassNameMo = new observers_1.AsriMutationObserver(globalClassNameMoCallback);\nconst lytCenterRo = new observers_1.AsriResizeObserver(lytCenterRoCallback);\nconst winRo = new observers_1.AsriResizeObserver(winRoCallback);\nconst themeUpdateListener = new eventListeners_1.AsriEventListener(themeUpdateCallback);\nlet isWinResizing = false, fromFullscreen;\nlet protyleWidthChange = 0;\nfunction loadAsriJSModules() {\n    return __awaiter(this, void 0, void 0, function* () {\n        (0, env_1.addEnvClassNames)();\n        (0, scrollbar_1.useMacSysScrollbar)();\n        (0, trafficLights_1.applyTrafficLightPosition)();\n        (0, status_1.setStatusHeightVar)();\n        // startDefaultTranstition(loadThemePalette);\n        (0, asriPalettes_1.loadThemePalette)(); // https://github.com/mustakshif/Asri/issues/85\n        (0, protyleStatus_1.toggleProtyleStatus)();\n        yield (0, asriPalettes_1.loadI18n)();\n        if (!rsc_1.environment.isMobile) {\n            yield (0, interfaceState_1.updateWndEls)();\n            yield (0, topbarFusion_1.updateDragRect)("initials");\n            (0, topbarFusion_1.createTopbarFusionElements)();\n        }\n        updateStyles();\n        (0, docks_1.addDockbClassName)();\n        (0, status_1.avoidOverlappingWithStatus)();\n        globalClickEventListener.start(document, "mouseup");\n        globalDragEventListener.start(document, "dragend");\n        globalKeyupEventListener.start(document, "keyup", true);\n        winFocusChangeEventListener.start(window, "focus");\n        winFocusChangeEventListener.start(window, "blur");\n        selectionChangeEventListener.start(document, "selectionchange");\n        globalClassNameMo.observe(document.body, observers_1.MOConfigForClassNames);\n        // watchImgExportMo.observe(document.body, { childList: true });\n        themeUpdateListener.start(modeTransition_1.darkModeMediaQuery, "change");\n        asriPalettes_1.paletteMenuItemClickEventListener.start(document, "mouseup");\n        asriPalettes_1.tfpMenuItemCallbackEventListener.start(document, "mouseup");\n        rsc_1.asriDoms.layoutCenter || (yield (0, misc_1.querySelectorAsync)(".layout__center"));\n        if (!rsc_1.environment.isMobile) {\n            lytCenterRo.observe(rsc_1.asriDoms.layoutCenter);\n            winRo.observe(document.body);\n        }\n    });\n}\nfunction unloadAsriJSModules() {\n    return __awaiter(this, arguments, void 0, function* (completeUnload = true) {\n        if (completeUnload) {\n            if (!rsc_1.environment.isMobile)\n                yield (0, topbarFusion_1.unloadTopbarFusion)();\n            (0, docks_1.destroyDockBg)();\n            (0, sidepanels_1.removeIndentGuidesFormatClassName)();\n            (0, afwd_1.removeProtyleSpacings)();\n            (0, docks_1.removeDockbClassName)();\n            (0, protyleStatus_1.removeProtyleStatusClassName)();\n            (0, focusedBlock_1.removeFocusedBlockClass)();\n            (0, status_1.unloadAvoidOverlappingWithStatus)();\n            (0, status_1.removeStatusStyles)();\n            (0, env_1.removeEnvClassNames)();\n            (0, scrollbar_1.restoreDefaultSiyuanScrollbar)();\n            (0, trafficLights_1.restoreTrafficLightPosition)();\n            document.body.classList.remove("body-asri--fullscreen", "asri-tfp", "asri-tfp-acrylic", "asri-tfp-progressive");\n            (0, asriPalettes_1.unloadThemePalette)();\n        }\n        globalClickEventListener.remove(document, "mouseup");\n        globalDragEventListener.remove(document, "dragend");\n        globalKeyupEventListener.remove(document, "keyup", true);\n        winFocusChangeEventListener.remove(window, "focus");\n        winFocusChangeEventListener.remove(window, "blur");\n        selectionChangeEventListener.remove(document, "selectionchange");\n        globalClassNameMo.disconnect();\n        themeUpdateListener.remove(modeTransition_1.darkModeMediaQuery, "change");\n        asriPalettes_1.paletteMenuItemClickEventListener.remove(document, "mouseup");\n        asriPalettes_1.tfpMenuItemCallbackEventListener.remove(document, "mouseup");\n        // watchImgExportMo.disconnect(() => {\n        //     document.body.classList.remove("has-exportimg")\n        // });\n        if (!rsc_1.environment.isMobile) {\n            lytCenterRo.disconnect();\n            winRo.disconnect();\n        }\n    });\n}\nfunction lowFreqEventsCallback(e) {\n    // console.log(e);\n    (0, asriPalettes_1.createBarModeMenuItems)(e);\n    (0, afwd_1.addAfwdMenuItems)(e);\n    updateStyles(e);\n    // if (!env.isIOSApp)\n    (0, modeTransition_1.modeTransitionOnClick)(e);\n}\nfunction winFocusChangeCallback(e) {\n    (0, interfaceState_1.updateWndEls)().then(() => {\n        updateStyles();\n        !rsc_1.environment.isIOSApp && asriPalettes_1.followSysAccentColor && rsc_1.environment.supportOklch && (0, asriPalettes_1.getSystemAccentColor)();\n    });\n}\nfunction updateStyles(e) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // run on first load\n        if (!e) {\n            lowFreqStyleUpdates();\n            (0, topbarFusion_1.calcTopbarSpacings)().then(topbarFusion_1.calcTabbarSpacings);\n        }\n        // run on mouse events\n        else if (e.type.startsWith("mouse") || e.type.startsWith("drag") || (e instanceof KeyboardEvent && (e.key === "Control" || e.key === "Alt" || e.key === "Shift" || e.key === "Meta"))) {\n            lowFreqStyleUpdates();\n            setTimeout(() => {\n                (0, topbarFusion_1.recalcDragInitials)();\n                (0, topbarFusion_1.calcTopbarSpacings)(0, false, interfaceState_1.doesTopBarOverflow).then(topbarFusion_1.calcTabbarSpacings);\n            }, 0);\n        }\n        function lowFreqStyleUpdates() {\n            setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n                (0, docks_1.updateDockLBgAndBorder)();\n                // debouncedFormatProtyleWithBgImageOnly();\n                (0, status_1.debouncedStatusPosition)();\n                (0, status_1.setStatusHeightVar)();\n                yield (0, interfaceState_1.updateWndEls)();\n                (0, afwd_1.calcProtyleSpacings)();\n                (0, docks_1.addDockbClassName)();\n                (0, status_1.avoidOverlappingWithStatus)();\n                !rsc_1.environment.isIOSApp && asriPalettes_1.followSysAccentColor && rsc_1.environment.supportOklch && (0, asriPalettes_1.getSystemAccentColor)();\n            }), 0);\n        }\n    });\n}\nfunction globalClassNameMoCallback(mutationList, observer) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        for (let mutation of mutationList) {\n            const target = mutation.target;\n            if (target.classList.contains("body--blur"))\n                return; // ⚠️ ignore constant classname change when app window blurs which cause unnecessary re-render and high cpu usage.\n            // console.log(mutation.target, mutation.type, mutation.attributeName, mutation.oldValue);\n            // filetree list item switch\n            if (target.classList.contains("b3-list-item--focus")) {\n                (0, sidepanels_1.debouncedFormatIndentGuidesForFocusedItems)();\n                // debouncedFormatProtyleWithBgImageOnly();\n                // console.log(\'focus\');\n            }\n            // tab switch\n            if (target.classList.contains("item--focus")) {\n                const docId = (_a = target.getAttribute("data-id")) !== null && _a !== void 0 ? _a : undefined;\n                // if (!docId) return;\n                (0, protyleStatus_1.toggleProtyleStatus)(docId);\n            }\n            if (target.classList.contains("layout__wnd--active")) {\n                // console.log(target, mutation.type, mutation.attributeName, mutation.oldValue)\n                const targetDoc = target.querySelector(".layout__center .layout-tab-container>[data-id]:not(.fn__none)");\n                // console.log(targetDoc)\n                if (!targetDoc)\n                    return;\n                const docId = (_b = targetDoc.getAttribute("data-id")) !== null && _b !== void 0 ? _b : undefined;\n                // if (!docId) return;\n                (0, protyleStatus_1.toggleProtyleStatus)(docId);\n            }\n        }\n    });\n}\nfunction lytCenterRoCallback(entries, observer) {\n    // debouncedHandleWinResizeEnd();\n    (0, topbarFusion_1.calcTopbarSpacings)(0, isWinResizing, interfaceState_1.doesTopBarOverflow).then(topbarFusion_1.calcTabbarSpacings);\n    (0, afwd_1.debouncedCalcProtyleSpacings)();\n    (0, status_1.debouncedStatusPosition)();\n    // console.log(\'lytCenterRoCallback\', isWinResizing)\n}\nfunction winRoCallback(entries, observer) {\n    for (let entry of entries) {\n        isWinResizing = true;\n        debouncedHandleWinResizeEnd();\n        const { inlineSize } = entry.contentBoxSize[0];\n        if (entry.target instanceof HTMLElement) {\n            // check if it\'s the first time to trigger resize event, if so, skip the calculation\n            if (!entry.target.dataset.prevWidth) {\n                entry.target.dataset.prevWidth = inlineSize + "";\n                continue;\n            }\n            // get previous width\n            const prevWidth = parseFloat(entry.target.dataset.prevWidth);\n            const widthChange = inlineSize - prevWidth;\n            entry.target.dataset.prevWidth = inlineSize + "";\n            protyleWidthChange = widthChange;\n        } // make sure to capture width change after the size change is completely done\n        // console.log(\'winRoCallback\', isWinResizing)\n    }\n}\nconst debouncedHandleWinResizeEnd = (0, misc_1.debounce)(() => {\n    isWinResizing = false;\n    (0, topbarFusion_1.handleMacFullScreen)();\n    (0, interfaceState_1.updateTopbarOverflow)();\n    if (!interfaceState_1.doesTopBarOverflow)\n        (0, topbarFusion_1.recalcDragInitials)();\n    (0, topbarFusion_1.calcTopbarSpacings)(protyleWidthChange, isWinResizing, interfaceState_1.doesTopBarOverflow).then(topbarFusion_1.calcTabbarSpacings);\n    protyleWidthChange = 0;\n    // console.log(\'debouncedwinRoCallback\', isWinResizing);\n}, 200);\nfunction themeUpdateCallback(e) {\n    // console.log(\'系统主题变化:\', e.matches ? \'暗色\' : \'亮色\')\n    (0, modeTransition_1.startFadeInFadeOutTranstition)(600, () => { }, 200);\n}\n\n\n//# sourceURL=webpack://asri/./src/modules/index.ts?')},"./src/modules/modeTransition.ts":function(__unused_webpack_module,exports){eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.darkModeMediaQuery = void 0;\nexports.modeTransitionOnClick = modeTransitionOnClick;\nexports.startFadeInFadeOutTranstition = startFadeInFadeOutTranstition;\nfunction modeTransitionOnClick(e) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (e.type !== \"mouseup\")\n            return;\n        const target = e.target;\n        if (target.closest('[data-name=\"barmode\"] .b3-menu__item:not([id])')) {\n            console.log(`Clicked item: ${target.textContent}`);\n            // e.stopPropagation();\n            // e.preventDefault();\n            startFadeInFadeOutTranstition();\n        }\n    });\n}\nfunction startFadeInFadeOutTranstition() {\n    return __awaiter(this, arguments, void 0, function* (animDuration = 600, func, waitDuration = 0) {\n        // // Setup view transition support\n        // const meta = document.createElement('meta');\n        // meta.name = 'view-transition';\n        // meta.content = 'same-origin';\n        // document.head.appendChild(meta);\n        if (!document.startViewTransition) {\n            func && func();\n            return;\n        }\n        console.log(\"\\x1b[34m\\x1b[1m\\x1b[47mMode Transition started\\x1b[0m\");\n        if (waitDuration > 0) {\n            const wait = (ms) => {\n                return new Promise((r) => setTimeout(r, ms));\n            };\n            const transition = document.startViewTransition(() => __awaiter(this, void 0, void 0, function* () {\n                yield Promise.race([wait(waitDuration)]);\n                func && func();\n            }));\n            transition.ready.then(() => {\n                document.documentElement.animate({\n                    opacity: [0, 1],\n                }, {\n                    duration: animDuration,\n                    // easing: 'ease-in-out',\n                });\n            });\n        }\n        else {\n            const transition = document.startViewTransition(func);\n            const style = document.createElement(\"style\");\n            style.textContent = `\n            ::view-transition-old(root),\n            ::view-transition-new(root) {\n                animation-duration: ${animDuration}ms;\n            }\n        `;\n            document.head.appendChild(style);\n            yield transition.finished;\n            style.remove();\n        }\n    });\n}\nexports.darkModeMediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n// 圆形过渡\n// let lastClick: any;\n// // addEventListener('click', event => (lastClick = event));\n// function spaNavigate() {\n//     // Fallback for browsers that don't support this API:\n//     if (!document.startViewTransition) {\n//         return;\n//     }\n//     // Get the click position, or fallback to the middle of the screen\n//     const x = lastClick?.clientX ?? innerWidth / 2;\n//     const y = lastClick?.clientY ?? innerHeight / 2;\n//     // Get the distance to the furthest corner\n//     const endRadius = Math.hypot(\n//         Math.max(x, innerWidth - x),\n//         Math.max(y, innerHeight - y)\n//     );\n//     // With a transition:\n//     const transition = document.startViewTransition(() => {\n//     });\n//     // Wait for the pseudo-elements to be created:\n//     transition.ready.then(() => {\n//         // Animate the root's new view\n//         document.documentElement.animate(\n//             {\n//                 clipPath: [\n//                     `circle(0 at ${x}px ${y}px)`,\n//                     `circle(${endRadius}px at ${x}px ${y}px)`,\n//                 ],\n//             },\n//             {\n//                 duration: 500,\n//                 easing: 'ease-in',\n//                 // Specify which pseudo-element to animate\n//                 pseudoElement: '::view-transition-new(root)',\n//             }\n//         );\n//     });\n// }\n\n\n//# sourceURL=webpack://asri/./src/modules/modeTransition.ts?")},"./src/modules/protyleStatus.ts":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.toggleProtyleStatus = toggleProtyleStatus;\nexports.removeProtyleStatusClassName = removeProtyleStatusClassName;\nconst misc_1 = __webpack_require__(/*! ../util/misc */ "./src/util/misc.ts");\nconst rsc_1 = __webpack_require__(/*! ../util/rsc */ "./src/util/rsc.ts");\nfunction toggleProtyleStatus(docID) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let isprotyle = yield (0, misc_1.isProtyle)(docID);\n        const status = rsc_1.asriDoms.status || (yield (0, misc_1.querySelectorAsync)("#status"));\n        if (!status)\n            return;\n        status.classList.toggle("asri--non-protyle-status", !isprotyle);\n    });\n}\nfunction removeProtyleStatusClassName() {\n    const status = rsc_1.asriDoms.status;\n    if (!status)\n        return;\n    status.classList.remove("asri--non-protyle-status");\n}\n\n\n//# sourceURL=webpack://asri/./src/modules/protyleStatus.ts?')},"./src/modules/scrollbar.ts":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.useMacSysScrollbar = useMacSysScrollbar;\nexports.restoreDefaultSiyuanScrollbar = restoreDefaultSiyuanScrollbar;\nconst rsc_1 = __webpack_require__(/*! ../util/rsc */ "./src/util/rsc.ts");\nconst { isMacOS, isMobile } = rsc_1.environment;\nconst asriDeletedRules = [];\nfunction useMacSysScrollbar() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (isMacOS || isMobile) {\n            for (let i = 0; i < document.styleSheets.length; i++) {\n                let styleSheet = document.styleSheets[i];\n                try {\n                    for (let j = 0; j < styleSheet.cssRules.length; j++) {\n                        let rule = styleSheet.cssRules[j];\n                        if (rule.selectorText && rule.selectorText.includes("::-webkit-scrollbar")) {\n                            if (rule.style.width || rule.style.height || rule.style.backgroundColor) {\n                                asriDeletedRules.push({ styleSheet: styleSheet, rule: rule.cssText });\n                                styleSheet.deleteRule(j);\n                                j--;\n                            }\n                        }\n                    }\n                }\n                catch (e) {\n                    console.log(e);\n                }\n            }\n        }\n    });\n}\nfunction restoreDefaultSiyuanScrollbar() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (asriDeletedRules) {\n            for (let i = 0; i < asriDeletedRules.length; i++) {\n                let rule = asriDeletedRules[i];\n                rule.styleSheet.insertRule(rule.rule, rule.styleSheet.cssRules.length);\n            }\n        }\n    });\n}\n\n\n//# sourceURL=webpack://asri/./src/modules/scrollbar.ts?')},"./src/modules/sidepanels.ts":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.debouncedFormatIndentGuidesForFocusedItems = void 0;\nexports.formatIndentGuidesForFocusedItems = formatIndentGuidesForFocusedItems;\nexports.removeIndentGuidesFormatClassName = removeIndentGuidesFormatClassName;\nconst misc_1 = __webpack_require__(/*! ../util/misc */ "./src/util/misc.ts");\nconst rsc_1 = __webpack_require__(/*! ../util/rsc */ "./src/util/rsc.ts");\nconst { isMobile } = rsc_1.environment;\nexports.debouncedFormatIndentGuidesForFocusedItems = (0, misc_1.debounce)(formatIndentGuidesForFocusedItems);\nfunction formatIndentGuidesForFocusedItems() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (isMobile)\n            return;\n        if (!rsc_1.asriDoms.layoutDockL)\n            yield (0, misc_1.querySelectorAsync)(".layout__dockl");\n        let listItemsFocus = document.querySelectorAll(".file-tree .b3-list-item--focus");\n        if (!listItemsFocus.length)\n            return;\n        document.querySelectorAll(".file-tree .has-focus").forEach((oldUl) => oldUl.classList.remove("has-focus"));\n        listItemsFocus.forEach((li) => {\n            if (!li.nextElementSibling || li.nextElementSibling.tagName !== "UL" || li.nextElementSibling.classList.contains("fn__none")) {\n                if (li.parentNode instanceof Element) {\n                    li.parentNode.classList.add("has-focus");\n                }\n            }\n        });\n    });\n}\nfunction removeIndentGuidesFormatClassName() {\n    document.querySelectorAll(".file-tree .has-focus").forEach((el) => el.classList.remove("has-focus"));\n}\n\n\n//# sourceURL=webpack://asri/./src/modules/sidepanels.ts?')},"./src/modules/status.ts":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.debouncedStatusPosition = void 0;\nexports.statusPosition = statusPosition;\nexports.setStatusHeightVar = setStatusHeightVar;\nexports.removeStatusStyles = removeStatusStyles;\nexports.avoidOverlappingWithStatus = avoidOverlappingWithStatus;\nexports.unloadAvoidOverlappingWithStatus = unloadAvoidOverlappingWithStatus;\nconst interfaceState_1 = __webpack_require__(/*! ../util/interfaceState */ "./src/util/interfaceState.ts");\nconst rsc_1 = __webpack_require__(/*! ../util/rsc */ "./src/util/rsc.ts");\nconst misc_1 = __webpack_require__(/*! ../util/misc */ "./src/util/misc.ts");\nexports.debouncedStatusPosition = (0, misc_1.debounce)(statusPosition);\n/**\n * Calculate the position of status bar when there is a change of the display of docks and their layouts.\n */\nfunction statusPosition() {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c;\n        if (rsc_1.environment.isMobile || rsc_1.environment.isMiniWindow)\n            return;\n        if (!rsc_1.asriDoms.status)\n            yield (0, misc_1.querySelectorAsync)("#status");\n        if (!(yield (0, interfaceState_1.hasDockb)())) {\n            function setStatusTransform(x, y) {\n                // doms.status!.style.transform = `translate(${x}px, ${y}px)`;\n                rsc_1.asriDoms.status.style.setProperty("--asri-status-transform-x", `${x}px`);\n                rsc_1.asriDoms.status.style.setProperty("--asri-status-transform-y", `${y}px`);\n            }\n            let layoutCenter = (rsc_1.asriDoms.layouts || (yield (0, misc_1.querySelectorAsync)("#layouts"))).querySelector(".layout__center");\n            if (layoutCenter && rsc_1.asriDoms.layoutDockR && !rsc_1.asriDoms.status.classList.contains(".fn__none")) {\n                let layoutDockrWidth = rsc_1.asriDoms.layoutDockR.clientWidth;\n                let layoutCenterWidth = layoutCenter.clientWidth;\n                let y = 0;\n                rsc_1.asriDoms.layoutDockB || (yield (0, misc_1.querySelectorAsync)(".layout__dockb"));\n                if (rsc_1.asriDoms.layoutDockB && !rsc_1.asriDoms.layoutDockB.classList.contains(".fn__none") && (0, interfaceState_1.isDockLytPinned)("B")) {\n                    y = rsc_1.asriDoms.layoutDockB.clientHeight * -1;\n                }\n                else {\n                    y = 0;\n                }\n                rsc_1.asriDoms.status.style.maxWidth = layoutCenterWidth - 12 + "px";\n                let isDockRightHidden = (0, interfaceState_1.isDockHidden)("R"), isLayoutDockRightHidden = !(0, interfaceState_1.isDockLytPinned)("R") && (0, interfaceState_1.isDockLytExpanded)("R");\n                if (isDockRightHidden && isLayoutDockRightHidden)\n                    setStatusTransform(0, y);\n                else if (!isDockRightHidden && isLayoutDockRightHidden)\n                    setStatusTransform(-40, y);\n                else if (!isDockRightHidden && !isLayoutDockRightHidden)\n                    setStatusTransform((layoutDockrWidth + 40) * -1, y);\n                else if (isDockRightHidden && !isLayoutDockRightHidden)\n                    setStatusTransform(layoutDockrWidth * -1, y);\n                // doms.status = document.getElementById(\'status\');\n            }\n        }\n        else {\n            (_a = rsc_1.asriDoms.status) === null || _a === void 0 ? void 0 : _a.style.removeProperty("max-width");\n            (_b = rsc_1.asriDoms.status) === null || _b === void 0 ? void 0 : _b.style.removeProperty("--asri-status-transform-x");\n            (_c = rsc_1.asriDoms.status) === null || _c === void 0 ? void 0 : _c.style.removeProperty("--asri-status-transform-y");\n        }\n        // if (!hasDockb() && !isLayoutDockHidden(\'b\')) {\n        //     let layoutDockbHeight = asriDoms.layoutDockb?.clientHeight;\n        //     asriDoms.status.style.transform = `translateY(-${layoutDockbHeight + 42}px)`;\n        // }\n    });\n}\nfunction setStatusHeightVar() {\n    const statusHeight = (0, interfaceState_1.isStatusHidden)() ? 0 : 32;\n    // fastdom.mutate(() => {\n    document.body.style.setProperty("--status-height", `${statusHeight}px`);\n    // })\n}\nfunction removeStatusStyles() {\n    document.body.style.removeProperty("--status-height");\n    setTimeout(() => {\n        var _a, _b, _c;\n        (_a = rsc_1.asriDoms.status) === null || _a === void 0 ? void 0 : _a.style.removeProperty("max-width");\n        (_b = rsc_1.asriDoms.status) === null || _b === void 0 ? void 0 : _b.style.removeProperty("--asri-status-transform-x");\n        (_c = rsc_1.asriDoms.status) === null || _c === void 0 ? void 0 : _c.style.removeProperty("--asri-status-transform-y");\n    }, 200);\n}\nfunction avoidOverlappingWithStatus() {\n    var _a, _b;\n    if (!(0, interfaceState_1.isStatusHidden)()) {\n        const layoutTabContainers = (_a = rsc_1.asriDoms.layouts) === null || _a === void 0 ? void 0 : _a.querySelectorAll(".layout__center .layout-tab-container");\n        const status = rsc_1.asriDoms.status;\n        // let statusRect = doms.status?.getBoundingClientRect();\n        layoutTabContainers === null || layoutTabContainers === void 0 ? void 0 : layoutTabContainers.forEach((layoutTabContainer) => {\n            let fileTree = layoutTabContainer.querySelector(".file-tree");\n            if (fileTree && !fileTree.classList.contains("fn__none")) {\n                // let containerRect = layoutTabContainer.getBoundingClientRect();\n                if ((0, misc_1.isOverlapping)(layoutTabContainer, status)) {\n                    layoutTabContainer.style.paddingBottom = "35px";\n                }\n                else {\n                    layoutTabContainer.style.removeProperty("padding-bottom");\n                }\n            }\n            else {\n                layoutTabContainer.style.removeProperty("padding-bottom");\n            }\n        });\n        const searchList = document.getElementById("searchList");\n        const searchPreview = document.getElementById("searchPreview");\n        if (searchList || searchPreview) {\n            // let searchListRect = searchList.getBoundingClientRect();\n            // let searchPreviewRect = searchPreview.getBoundingClientRect();\n            if ((0, misc_1.isOverlapping)(searchList, status)) {\n                searchList.style.paddingBottom = "35px";\n            }\n            else {\n                searchList.style.removeProperty("padding-bottom");\n            }\n            if ((0, misc_1.isOverlapping)(searchPreview, status)) {\n                searchPreview.style.paddingBottom = "35px";\n            }\n            else {\n                searchPreview.style.removeProperty("padding-bottom");\n            }\n        }\n        // pdfviewer\n        const viewerContainer = document.getElementById("viewerContainer");\n        if (viewerContainer) {\n            // let viewerContainerRect = viewerContainer.getBoundingClientRect();\n            if ((0, misc_1.isOverlapping)(viewerContainer, status)) {\n                viewerContainer.style.paddingBottom = "35px";\n            }\n            else {\n                viewerContainer.style.removeProperty("padding-bottom");\n            }\n        }\n        // flashcard in tabbar\n        (_b = rsc_1.asriDoms.layouts) === null || _b === void 0 ? void 0 : _b.querySelectorAll(".card__main").forEach((card) => {\n            if (card) {\n                // let cardRect = card.getBoundingClientRect();\n                if ((0, misc_1.isOverlapping)(card, status)) {\n                    card.style.paddingBottom = "35px";\n                }\n                else {\n                    card.style.removeProperty("padding-bottom");\n                }\n            }\n        });\n    }\n}\nfunction unloadAvoidOverlappingWithStatus() {\n    var _a, _b;\n    (_a = rsc_1.asriDoms.layouts) === null || _a === void 0 ? void 0 : _a.querySelectorAll(".layout__center .layout-tab-container").forEach((layoutTabContainer) => {\n        layoutTabContainer.style.removeProperty("padding-bottom");\n    });\n    (_b = rsc_1.asriDoms.layouts) === null || _b === void 0 ? void 0 : _b.querySelectorAll(".card__main").forEach((card) => {\n        card.style.removeProperty("padding-bottom");\n    });\n    const searchList = document.getElementById("searchList");\n    const searchPreview = document.getElementById("searchPreview");\n    const viewerContainer = document.getElementById("viewerContainer");\n    for (const el of [searchList, searchPreview, viewerContainer]) {\n        if (el) {\n            el.style.removeProperty("padding-bottom");\n        }\n    }\n}\n\n\n//# sourceURL=webpack://asri/./src/modules/status.ts?')},"./src/modules/topbarFusion.ts":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.updateDragRect = updateDragRect;\nexports.handleMacFullScreen = handleMacFullScreen;\nexports.calcTopbarSpacings = calcTopbarSpacings;\nexports.calcTabbarSpacings = calcTabbarSpacings;\nexports.unloadTopbarFusion = unloadTopbarFusion;\nexports.createTopbarFusionElements = createTopbarFusionElements;\nexports.recalcDragInitials = recalcDragInitials;\nconst misc_1 = __webpack_require__(/*! ../util/misc */ "./src/util/misc.ts");\nconst rsc_1 = __webpack_require__(/*! ../util/rsc */ "./src/util/rsc.ts");\nconst interfaceState_1 = __webpack_require__(/*! ../util/interfaceState */ "./src/util/interfaceState.ts");\n// added toolbar elements\nlet pluginsDivider, leftSpacing, rightSpacing;\nlet topbar = rsc_1.asriDoms.toolbar;\nlet topbarRect, dragRect, layoutsCenterRect, leftSpacingRect, rightSpacingRect, barForwardRect, barSyncRect;\nlet dragRectInitialLeft, dragRectInitialRight;\nlet fromFullscreen = false;\nfunction updateDragRect() {\n    return __awaiter(this, arguments, void 0, function* (mode = "rect", ...dir) {\n        const drag = rsc_1.asriDoms.drag || (yield (0, misc_1.querySelectorAsync)("#drag"));\n        if (!drag || rsc_1.environment.isMiniWindow) {\n            return -1;\n        }\n        return new Promise((resolve) => {\n            if (mode === "initials") {\n                if (!dir.length || dir.includes("L")) {\n                    dragRectInitialLeft = drag.getBoundingClientRect().left;\n                    resolve(dragRectInitialLeft);\n                    // console.log(\'dragRectInitialLeft\', dragRectInitialLeft)\n                }\n                if (!dir.length || dir.includes("R")) {\n                    dragRectInitialRight = drag.getBoundingClientRect().right;\n                    resolve(dragRectInitialRight);\n                    // console.log(\'dragRectInitialRight\', dragRectInitialRight)\n                }\n            }\n            else {\n                dragRect = drag.getBoundingClientRect();\n                resolve(dragRect);\n            }\n        });\n    });\n}\nfunction handleMacFullScreen() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!rsc_1.environment.isMacOS)\n            return;\n        if ((0, interfaceState_1.isFullScreen)()) {\n            document.body.classList.add("body-asri--fullscreen");\n            dragRectInitialLeft -= fromFullscreen ? 0 : 80 + 8;\n            // dragRectInitialRight += protyleWidthChange;\n            fromFullscreen = true;\n        }\n        else {\n            document.body.classList.remove("body-asri--fullscreen");\n            leftSpacing === null || leftSpacing === void 0 ? void 0 : leftSpacing.style.setProperty("width", "0px");\n            dragRectInitialLeft = (yield updateDragRect("initials", "L"));\n            // dragRectInitialRight -= protyleWidthChange;\n            leftSpacing === null || leftSpacing === void 0 ? void 0 : leftSpacing.style.removeProperty("width");\n            fromFullscreen = false;\n        }\n    });\n}\nfunction calcTopbarSpacings() {\n    return __awaiter(this, arguments, void 0, function* (widthChange = 0, isWinResizing = false, doesTopBarOverflow = false) {\n        if (rsc_1.environment.isMiniWindow || rsc_1.environment.isMobile) {\n            return {\n                execute: false,\n                centerRectRight: 0,\n            };\n        }\n        let layoutsCenter = rsc_1.asriDoms.layoutCenter || (yield (0, misc_1.querySelectorAsync)(".layout__center"));\n        // calcAndApply();\n        // if (!isWinResizing) calcAndApply(); // otherwise would cause dragRightInitial to be at unexpected position\n        // else dragRectRightInitial = dragRectRightInitial + widthChange;\n        return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d, _e, _f;\n            if (isWinResizing)\n                dragRectInitialRight += widthChange;\n            if (!dragRectInitialLeft || !dragRectInitialRight)\n                yield updateDragRect("initials");\n            layoutsCenterRect = layoutsCenter.getBoundingClientRect();\n            barSyncRect = rsc_1.asriDoms.barSync.getBoundingClientRect();\n            barForwardRect = rsc_1.asriDoms.barForward.getBoundingClientRect();\n            let centerRectLeft = layoutsCenterRect.left, centerRectRight = layoutsCenterRect.right, barSearchRectLeft = rsc_1.asriDoms.barSearch.getBoundingClientRect().left;\n            // console.log(\'measure: topbar spacings\')\n            if (!isWinResizing) {\n                // left side\n                if (centerRectLeft > dragRectInitialLeft + 8) {\n                    topbar === null || topbar === void 0 ? void 0 : topbar.style.setProperty("--topbar-left-spacing", "0");\n                    // dragRectInitialLeft = fromFullscreen ? dragRectLeftInitial : asriDoms.drag.getBoundingClientRect().left;\n                    if (!(rsc_1.environment.isMacOS && fromFullscreen)) {\n                        yield updateDragRect("initials", "L");\n                    }\n                    // recalc initial everytime\n                    leftSpacing === null || leftSpacing === void 0 ? void 0 : leftSpacing.classList.remove("asri-expanded");\n                }\n                else if (rsc_1.environment.isMacOS && !rsc_1.environment.isInBrowser) {\n                    topbar.style.setProperty("--topbar-left-spacing", centerRectLeft - barSyncRect.right + 4 + "px");\n                    leftSpacing === null || leftSpacing === void 0 ? void 0 : leftSpacing.classList.add("asri-expanded");\n                }\n                else {\n                    topbar.style.setProperty("--topbar-left-spacing", centerRectLeft - barForwardRect.right + 4 + "px");\n                    leftSpacing === null || leftSpacing === void 0 ? void 0 : leftSpacing.classList.add("asri-expanded");\n                }\n                // right side\n                if (centerRectRight < dragRectInitialRight - 8 && !doesTopBarOverflow) {\n                    topbar.style.setProperty("--topbar-right-spacing", "0");\n                    yield updateDragRect("initials", "R");\n                    // css related\n                    (_a = rsc_1.asriDoms.dockR) === null || _a === void 0 ? void 0 : _a.style.removeProperty("--avoid-topbar");\n                    (_b = rsc_1.asriDoms.layoutDockR) === null || _b === void 0 ? void 0 : _b.style.removeProperty("--avoid-topbar");\n                }\n                else {\n                    if (rsc_1.environment.isMacOS || rsc_1.environment.isInBrowser) {\n                        topbar.style.setProperty("--topbar-right-spacing", window.innerWidth - centerRectRight + 1 + "px");\n                        // windowControls element takes up 2px\n                        (_c = rsc_1.asriDoms.dockR) === null || _c === void 0 ? void 0 : _c.style.setProperty("--avoid-topbar", "4px");\n                        (_d = rsc_1.asriDoms.layoutDockR) === null || _d === void 0 ? void 0 : _d.style.setProperty("--avoid-topbar", "4px");\n                    }\n                    else {\n                        topbar.style.setProperty("--topbar-right-spacing", barSearchRectLeft - centerRectRight + 6 + "px");\n                        (_e = rsc_1.asriDoms.dockR) === null || _e === void 0 ? void 0 : _e.style.setProperty("--avoid-topbar", "calc(var(--toolbar-height) - 6px)");\n                        (_f = rsc_1.asriDoms.layoutDockR) === null || _f === void 0 ? void 0 : _f.style.setProperty("--avoid-topbar", "calc(var(--toolbar-height) - 6px)");\n                    }\n                }\n            }\n            resolve({\n                execute: true,\n                centerRectRight: centerRectRight,\n            });\n        }));\n    });\n}\n/**\n * calculates tabbar spacings & positions, always comes after topbar spacings calculation\n */\nfunction calcTabbarSpacings() {\n    return __awaiter(this, arguments, void 0, function* ({ execute, centerRectRight } = { execute: false, centerRectRight: 0 }) {\n        var _a, _b;\n        // console.log(\'tabbar spacings\')\n        if (!execute)\n            return;\n        topbarRect = (_a = rsc_1.asriDoms.toolbar) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n        (yield updateDragRect("rect"));\n        layoutsCenterRect = (_b = rsc_1.asriDoms.layoutCenter) === null || _b === void 0 ? void 0 : _b.getBoundingClientRect();\n        // set divider style\n        (() => {\n            // console.log(\'pluginsDivider\', pluginsDivider)\n            if (!pluginsDivider && !(pluginsDivider = document.getElementById("AsriPluginsIconsDivider")))\n                return;\n            if (centerRectRight < dragRectInitialRight - 8) {\n                // horisontal divider\n                pluginsDivider.style.setProperty("--container-bg", "var(--b3-border-color-trans))");\n                pluginsDivider.style.left = centerRectRight + "px";\n                pluginsDivider.style.right = "0";\n                pluginsDivider.style.removeProperty("height");\n                pluginsDivider.style.removeProperty("top");\n                pluginsDivider.style.removeProperty("width");\n            }\n            else {\n                // vertical divider\n                // if (!dragRect) await updateDragRect(\'rect\') as DOMRect;\n                // const dragRect = doms.drag?.getBoundingClientRect() as DOMRect;\n                pluginsDivider.style.setProperty("--container-bg", "var(--b3-border-color-trans)");\n                pluginsDivider.style.left = dragRect.right - 10 + "px";\n                pluginsDivider.style.width = "2px";\n                pluginsDivider.style.height = "21px";\n                pluginsDivider.style.top = "13.5px";\n            }\n        })();\n        // console.log("center right:", centerRectRight, \'drag initial right\', dragRectInitialRight, \'dragrect right:\', dragRect?.right)\n        interfaceState_1.wndElements === null || interfaceState_1.wndElements === void 0 ? void 0 : interfaceState_1.wndElements.forEach((wnd) => __awaiter(this, void 0, void 0, function* () {\n            let tabbarContainer = wnd.querySelector(\'.fn__flex-column[data-type="wnd"] > .fn__flex:first-child\');\n            let tabbarContainerRect;\n            // console.log(tabbarContainer);\n            if (tabbarContainer.classList.contains("fn__none")) {\n                // fix https://github.com/mustakshif/Asri/issues/117\n                tabbarContainer = (yield (0, misc_1.querySelectorAsync)(\'.fn__flex-column[data-type="wnd"] > .fn__flex:first-child:not(.fn__none)\', wnd, 3));\n            }\n            tabbarContainerRect = tabbarContainer === null || tabbarContainer === void 0 ? void 0 : tabbarContainer.getBoundingClientRect();\n            if (!tabbarContainerRect)\n                return;\n            let paddingLeftValue = tabbarContainerRect.left < dragRect.left ? dragRect.left - tabbarContainerRect.left - 4 : 0;\n            let paddingRightValue = tabbarContainerRect.right > dragRect.right ? tabbarContainerRect.right - dragRect.right + 8 : 0;\n            // console.log(\'measure: tabbar spacings inner\')\n            if ((0, misc_1.isOverlapping)(tabbarContainer, rsc_1.asriDoms.drag) || (0, misc_1.isOverlapping)(tabbarContainer, rsc_1.asriDoms.toolbar)) {\n                tabbarContainer.style.paddingLeft = paddingLeftValue + "px";\n                tabbarContainer.style.paddingRight = paddingRightValue + "px";\n                // asriDoms.drag = document.getElementById(\'drag\');\n                // add top padding in extremely narrow width\n                if ((tabbarContainerRect.right - paddingRightValue - 240 < dragRect.left && tabbarContainerRect.left < dragRect.left) || (tabbarContainerRect.left + paddingLeftValue + 240 > dragRect.right && tabbarContainerRect.right > dragRect.right)) {\n                    tabbarContainer.style.paddingTop = "42px";\n                    tabbarContainer.style.paddingLeft = "0";\n                    tabbarContainer.style.paddingRight = "0";\n                }\n                else {\n                    tabbarContainer.style.removeProperty("padding-top");\n                }\n            }\n            else {\n                tabbarContainer.style.removeProperty("padding-left");\n                tabbarContainer.style.removeProperty("padding-right");\n                tabbarContainer.style.removeProperty("padding-top");\n            }\n        }));\n    });\n}\nfunction unloadTopbarFusion() {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        yield (0, interfaceState_1.updateWndEls)();\n        removeTopbarElements();\n        interfaceState_1.wndElements === null || interfaceState_1.wndElements === void 0 ? void 0 : interfaceState_1.wndElements.forEach((wnd) => {\n            let tabbarContainer = wnd.firstElementChild;\n            tabbarContainer.style.removeProperty("padding-top");\n            tabbarContainer.style.removeProperty("padding-left");\n            tabbarContainer.style.removeProperty("padding-right");\n        });\n        rsc_1.asriDoms.layoutCenter.dataset.prevWidth = undefined;\n        document.body.dataset.prevWidth = undefined;\n        (_a = rsc_1.asriDoms.dockR) === null || _a === void 0 ? void 0 : _a.style.removeProperty("--avoid-topbar");\n        (_b = rsc_1.asriDoms.layoutDockR) === null || _b === void 0 ? void 0 : _b.style.removeProperty("--avoid-topbar");\n    });\n}\nfunction createTopbarFusionElements() {\n    if (rsc_1.environment.isMobile)\n        return;\n    pluginsDivider = createTopbarElementById("AsriPluginsIconsDivider", undefined, rsc_1.asriDoms.drag);\n    leftSpacing = rsc_1.environment.isMacOS && !rsc_1.environment.isInBrowser ? createTopbarElementById("AsriTopbarLeftSpacing", undefined, rsc_1.asriDoms.barSync) : createTopbarElementById("AsriTopbarLeftSpacing", undefined, rsc_1.asriDoms.barForward);\n    rightSpacing = rsc_1.environment.isMacOS || rsc_1.environment.isInBrowser ? createTopbarElementById("AsriTopbarRightSpacing") : createTopbarElementById("AsriTopbarRightSpacing", rsc_1.asriDoms.barSearch);\n    // add svg to toolbar elements to fix barMore menu issue\n    const svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");\n    rightSpacing === null || rightSpacing === void 0 ? void 0 : rightSpacing.appendChild(svg.cloneNode(true));\n    pluginsDivider === null || pluginsDivider === void 0 ? void 0 : pluginsDivider.appendChild(svg.cloneNode(true));\n    leftSpacing === null || leftSpacing === void 0 ? void 0 : leftSpacing.appendChild(svg.cloneNode(true));\n}\nfunction createTopbarElementById(newId, before = undefined, after = undefined) {\n    if (document.getElementById(newId))\n        return;\n    if (!rsc_1.asriDoms.toolbar)\n        return;\n    let newDiv = document.createElement("div");\n    newDiv.id = newId;\n    if (before) {\n        rsc_1.asriDoms.toolbar.insertBefore(newDiv, before);\n    }\n    else if (after) {\n        rsc_1.asriDoms.toolbar.insertBefore(newDiv, after.nextSibling);\n    }\n    else {\n        rsc_1.asriDoms.toolbar.appendChild(newDiv);\n    }\n    return newDiv;\n}\nfunction recalcDragInitials() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!leftSpacing || !rightSpacing)\n            return;\n        leftSpacing.style.setProperty("width", "0px");\n        rightSpacing.style.setProperty("width", "0px");\n        yield updateDragRect("initials");\n        leftSpacing.style.removeProperty("width");\n        rightSpacing.style.removeProperty("width");\n        // console.log(\'recalcDragInitials\', dragRectInitialLeft, dragRectInitialRight)\n    });\n}\nfunction removeTopbarElements() {\n    if (pluginsDivider) {\n        pluginsDivider.remove();\n        // pluginsDivider = undefined;\n    }\n    if (leftSpacing) {\n        leftSpacing.remove();\n        leftSpacing = undefined;\n    }\n    if (rightSpacing) {\n        rightSpacing.remove();\n        rightSpacing = undefined;\n    }\n}\n\n\n//# sourceURL=webpack://asri/./src/modules/topbarFusion.ts?')},"./src/modules/trafficLights.ts":(__unused_webpack_module,exports,__webpack_require__)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.applyTrafficLightPosition = applyTrafficLightPosition;\nexports.restoreTrafficLightPosition = restoreTrafficLightPosition;\nconst electron_1 = __webpack_require__(/*! ../util/electron */ "./src/util/electron.ts");\nconst rsc_1 = __webpack_require__(/*! ../util/rsc */ "./src/util/rsc.ts");\nfunction setTrafficLightPosition(x, y = x) {\n    if (electron_1.remote) {\n        electron_1.remote.getCurrentWindow().setWindowButtonPosition({ x: x, y: y });\n    }\n}\nfunction applyTrafficLightPosition() {\n    if (rsc_1.environment.isMacOS) {\n        if (!rsc_1.environment.isInBrowser)\n            setTrafficLightPosition(16);\n        if (rsc_1.environment.isMiniWindow)\n            setTrafficLightPosition(14);\n    }\n}\nfunction restoreTrafficLightPosition() {\n    if (rsc_1.environment.isMacOS) {\n        if (!rsc_1.environment.isInBrowser)\n            setTrafficLightPosition(8);\n        if (rsc_1.environment.isMiniWindow)\n            setTrafficLightPosition(8, 13);\n    }\n}\n\n\n//# sourceURL=webpack://asri/./src/modules/trafficLights.ts?')},"./src/util/api.ts":function(__unused_webpack_module,exports){eval('\n// 思源 API\n// [cc-baselib/siYuanApi.js at main · leolee9086/cc-baselib](https://github.com/leolee9086/cc-baselib/blob/main/src/siYuanApi.js)\n// Rem Craft/util/api.js\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.getFile = getFile;\nexports.putFile = putFile;\nexports.setBlockAttrs = setBlockAttrs;\nexports.getBlockAttrs = getBlockAttrs;\nfunction getFile(path) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield fetch("/api/file/getFile", {\n            method: "POST",\n            // https://github.com/siyuan-note/siyuan/issues/14571\n            // headers: {\n            //     Authorization: `Token \'\'`,\n            // },\n            body: JSON.stringify({\n                path: path,\n            }),\n        });\n        if (response.ok)\n            return response;\n        else\n            return null;\n    });\n}\nfunction putFile(path_1, filedata_1) {\n    return __awaiter(this, arguments, void 0, function* (path, filedata, isDir = false, modTime = Date.now()) {\n        let blob = new Blob([filedata]);\n        let fileName = path.split("/").pop();\n        let file = new File([blob], fileName);\n        let formdata = new FormData();\n        formdata.append("path", path);\n        formdata.append("file", file);\n        formdata.append("isDir", String(isDir));\n        formdata.append("modTime", String(modTime));\n        const response = yield fetch("/api/file/putFile", {\n            body: formdata,\n            method: "POST",\n            //https://github.com/siyuan-note/siyuan/issues/14571\n            // headers: {\n            //     Authorization: `Token \'\'`,\n            // },\n        });\n        if (response.ok)\n            return yield response.json();\n        else\n            return null;\n    });\n}\nfunction setBlockAttrs(blockId, attrObj) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let url = "/api/attr/setBlockAttrs";\n        // console.log(url, blockId, attrObj)\n        return resolveResponse(requestFromSiyuan(url, {\n            "id": blockId,\n            "attrs": attrObj,\n        }));\n    });\n}\nfunction getBlockAttrs(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let url = "/api/attr/getBlockAttrs";\n        return resolveResponse(requestFromSiyuan(url, {\n            "id": id,\n        }));\n    });\n}\nfunction resolveResponse(response) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let r = yield response;\n        // console.log(r)\n        return r["code"] === 0 ? r["data"] : null;\n    });\n}\nfunction requestFromSiyuan(url, data) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let resData = null;\n        yield fetch(url, {\n            "body": JSON.stringify(data),\n            "method": "POST",\n            "headers": {\n                "Authorization": `Token ${""}`,\n            },\n        }).then(function (response) {\n            resData = response.json();\n        });\n        return resData;\n    });\n}\n\n\n//# sourceURL=webpack://asri/./src/util/api.ts?')},"./src/util/electron.ts":(__unused_webpack_module,exports,__webpack_require__)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.remote = void 0;\nconst rsc_1 = __webpack_require__(/*! ./rsc */ "./src/util/rsc.ts");\nexports.remote = rsc_1.environment.isInBrowser || rsc_1.environment.isMobile ? null : __webpack_require__(/*! @electron/remote */ "@electron/remote");\n\n\n//# sourceURL=webpack://asri/./src/util/electron.ts?')},"./src/util/eventListeners.ts":(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.AsriEventListener = void 0;\nclass AsriEventListener {\n    constructor(callback) {\n        this.callback = callback;\n    }\n    start(target, eventName, option = false) {\n        target.addEventListener(eventName, this.callback, option);\n    }\n    remove(target, eventName, option = false) {\n        target.removeEventListener(eventName, this.callback, option);\n    }\n}\nexports.AsriEventListener = AsriEventListener;\n\n\n//# sourceURL=webpack://asri/./src/util/eventListeners.ts?')},"./src/util/interfaceState.ts":function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.wndElements = exports.debouncedUpdateTopbarOverflow = exports.doesTopBarOverflow = void 0;\nexports.updateTopbarOverflow = updateTopbarOverflow;\nexports.isDockLytPinned = isDockLytPinned;\nexports.isDockLytExpanded = isDockLytExpanded;\nexports.isDockHidden = isDockHidden;\nexports.hasDockb = hasDockb;\nexports.isFullScreen = isFullScreen;\nexports.isStatusHidden = isStatusHidden;\nexports.updateWndEls = updateWndEls;\nconst electron_1 = __webpack_require__(/*! ./electron */ "./src/util/electron.ts");\nconst misc_1 = __webpack_require__(/*! ./misc */ "./src/util/misc.ts");\nconst rsc_1 = __webpack_require__(/*! ./rsc */ "./src/util/rsc.ts");\n// top bar\nexports.doesTopBarOverflow = false;\nexports.debouncedUpdateTopbarOverflow = (0, misc_1.debounce)(updateTopbarOverflow);\nfunction updateTopbarOverflow() {\n    var _a, _b;\n    if (!rsc_1.asriDoms.toolbar)\n        return;\n    exports.doesTopBarOverflow = ((_a = rsc_1.asriDoms.toolbar) === null || _a === void 0 ? void 0 : _a.scrollWidth) > rsc_1.asriDoms.toolbar.clientWidth;\n    if (!((_b = rsc_1.asriDoms.barMore) === null || _b === void 0 ? void 0 : _b.classList.contains("fn__none"))) {\n        exports.doesTopBarOverflow = true;\n    }\n    // console.log(\'measure top bar overflow\')\n}\n// docks and panels\nfunction isDockLytPinned(dir) {\n    const dockLayoutEl = dir === "B" ? rsc_1.asriDoms.layoutDockB : dir === "L" ? rsc_1.asriDoms.layoutDockL : rsc_1.asriDoms.layoutDockR; // read properties directly to prevent \'undefined\' result after minimizing js\n    return !!(dockLayoutEl && !dockLayoutEl.classList.contains("layout--float"));\n}\nfunction isDockLytExpanded(dir) {\n    const dockLayoutEl = dir === "B" ? rsc_1.asriDoms.layoutDockB : dir === "L" ? rsc_1.asriDoms.layoutDockL : rsc_1.asriDoms.layoutDockR; // read properties directly to prevent \'undefined\' result after minimizing js\n    let size;\n    if (!dockLayoutEl)\n        return false;\n    if (dir === "B") {\n        size = dockLayoutEl.style.height;\n    }\n    else {\n        size = dockLayoutEl.style.width;\n    }\n    return !!(size && size !== "0px");\n}\nfunction isDockHidden(dir = "L") {\n    const dock = dir === "B" ? rsc_1.asriDoms.dockB : dir === "L" ? rsc_1.asriDoms.dockL : rsc_1.asriDoms.dockR; // read properties directly to prevent \'undefined\' result after minimizing js\n    return !!(dock && dock.classList.contains("fn__none"));\n    // uses right dock to calculate status bar position: https://github.com/mustakshif/Asri/issues/16\n}\n// export function isFloatDockLytHidden(el: HTMLElement): boolean {\n//     return !isDockLytPinned(el) && el?.style.cssText.includes(\'transform: translate\');\n// }\n// bottom dock\nfunction hasDockb() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!rsc_1.asriDoms.dockB)\n            yield (0, misc_1.querySelectorAsync)(".layout__dockb");\n        return !!(rsc_1.asriDoms.dockB && !rsc_1.asriDoms.dockB.classList.contains("fn__none"));\n    });\n}\n// export function isLytDockbFloating() {\n//     let result = false;\n//     if (!env.isMobile) {\n//         const layouts = doms.layouts;\n//         const lytDockb = layouts?.querySelector(\'.layout__dockb\') as AsriDomsExtended;\n//         result = !!(layouts && lytDockb?.classList.contains(\'layout--float\') && lytDockb?.style.height !== "0px");\n//     }\n//     return result;\n// }\n// fullscreen state in macOS\nfunction isFullScreen() {\n    return !!(electron_1.remote && electron_1.remote.getCurrentWindow().isFullScreen());\n}\n// status bar\nfunction isStatusHidden() {\n    return !!(rsc_1.asriDoms.status && rsc_1.asriDoms.status.classList.contains("fn__none"));\n}\nexports.wndElements = document.querySelectorAll(\'.layout__center [data-type="wnd"]\');\n/**\n * update wnd elements, use before calcTabbarSpacings() and calcProtyleSpacings()\n */\nfunction updateWndEls() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield (0, misc_1.querySelectorAllAsync)(\'.layout__center [data-type="wnd"]\').then((els) => {\n            exports.wndElements = els;\n        });\n        return exports.wndElements;\n    });\n}\n\n\n//# sourceURL=webpack://asri/./src/util/interfaceState.ts?')},"./src/util/misc.ts":function(__unused_webpack_module,exports){eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.pushUnique = pushUnique;\nexports.debounce = debounce;\nexports.hexToHSL = hexToHSL;\nexports.hexToOklchL = hexToOklchL;\nexports.isOverlapping = isOverlapping;\nexports.isOverlappingAsync = isOverlappingAsync;\nexports.nodeListsHaveSameElements = nodeListsHaveSameElements;\nexports.querySelectorAsync = querySelectorAsync;\nexports.querySelectorAllAsync = querySelectorAllAsync;\nexports.isProtyle = isProtyle;\n/**\n * Pushes an item to the array if it is not already present.\n * @param {Array} arr - The array to push the item to.\n * @param {*} item - The item to push to the array.\n */\nfunction pushUnique(arr, item) {\n    if (!arr.includes(item)) {\n        arr.push(item);\n    }\n}\nfunction debounce(func, delay = 200) {\n    let timeoutId = null;\n    return ((...args) => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n            // console.log(\'timeoutId cleared\', timeoutId)\n        }\n        timeoutId = setTimeout(() => {\n            func(...args);\n            // console.log(timeoutId)\n            timeoutId = null;\n        }, delay);\n    });\n}\n// export function debounce(fn: Function, delay = 200): (...args: any[]) => any {\n//     let timer: any;\n//     return function (this: any, ...args: any) {\n//         if (timer) {\n//             clearTimeout(timer)\n//         }\n//         timer = setTimeout(() => {\n//             fn.apply(this, args);\n//             timer = null;\n//         }, delay)\n//     }\n// }\nfunction hexToHSL(hex) {\n    if (!hex) {\n        return;\n    }\n    const r = parseInt(hex.substring(1, 3), 16) / 255;\n    const g = parseInt(hex.substring(3, 5), 16) / 255;\n    const b = parseInt(hex.substring(5, 7), 16) / 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const lightness = (max + min) / 2;\n    if (max === min) {\n        return {\n            h: 0,\n            s: 0,\n            l: lightness,\n        };\n    }\n    let hue = 0;\n    const delta = max - min;\n    const saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n    switch (max) {\n        case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n        case g:\n            hue = (b - r) / delta + 2;\n            break;\n        case b:\n            hue = (r - g) / delta + 4;\n            break;\n    }\n    hue /= 6;\n    return {\n        h: hue,\n        s: saturation,\n        l: lightness,\n    };\n}\nfunction hexToOklchL(hex) {\n    if (!hex)\n        return;\n    // 移除可能存在的 \'#\' 符号\n    hex = hex.replace(/^#/, "");\n    if (hex.length === 4)\n        hex.substring(0, 3);\n    else if (hex.length === 8)\n        hex.substring(0, 6);\n    if (hex.length === 3) {\n        hex = hex\n            .split("")\n            .map(function (c) {\n            return c + c;\n        })\n            .join("");\n    }\n    // 将 hex 转换为 RGB\n    let r = parseInt(hex.slice(0, 2), 16) / 255;\n    let g = parseInt(hex.slice(2, 4), 16) / 255;\n    let b = parseInt(hex.slice(4, 6), 16) / 255;\n    // 将 RGB 转换为线性 RGB\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    // 将线性 RGB 转换为 XYZ\n    let x = 0.4124564 * r + 0.3575761 * g + 0.1804375 * b;\n    let y = 0.2126729 * r + 0.7151522 * g + 0.072175 * b;\n    let z = 0.0193339 * r + 0.119192 * g + 0.9503041 * b;\n    // 将 XYZ 转换为 LMS\n    let l = 0.8189330101 * x + 0.3618667424 * y - 0.1288597137 * z;\n    let m = 0.0329845436 * x + 0.9293118715 * y + 0.0361456387 * z;\n    let s = 0.0482003018 * x + 0.2643662691 * y + 0.633851707 * z;\n    // 应用非线性函数\n    l = Math.cbrt(l);\n    m = Math.cbrt(m);\n    s = Math.cbrt(s);\n    // 计算 OKLCH 的 L 值\n    let L = 0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s;\n    // 将 L 值范围调整到 0-100\n    // L = L * 100;\n    return L;\n}\n// export function asriModeTransition() {\n//     document.body.classList.add(\'asri-mode-transition\');\n//     setTimeout(() => {\n//         document.body.classList.remove(\'asri-mode-transition\');\n//     }, 350);\n// }\n/**\n * Check if two elements have overlapping parts.\n */\nfunction isOverlapping(el1, el2) {\n    if (!el1 || !el2) {\n        console.warn("isOverlapping called with null element");\n        return false;\n    }\n    let el1Rect, el2Rect;\n    el1Rect = el1.getBoundingClientRect();\n    el2Rect = el2.getBoundingClientRect();\n    const res = isRectOverlapping(el1Rect, el2Rect);\n    // console.log(\'measure isOverlapping\')\n    return res;\n}\nfunction isOverlappingAsync(el1, el2) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!el1 || !el2) {\n            console.warn("isOverlapping called with null element");\n            return false;\n        }\n        return new Promise((resolve) => {\n            let el1Rect, el2Rect;\n            el1Rect = el1.getBoundingClientRect();\n            el2Rect = el2.getBoundingClientRect();\n            const res = isRectOverlapping(el1Rect, el2Rect);\n            // console.log(\'measure isOverlapping\')\n            resolve(res);\n        });\n    });\n}\nfunction isRectOverlapping(elementRect, targetRect) {\n    let result = false;\n    if (elementRect && targetRect) {\n        result = elementRect.right > targetRect.left && elementRect.bottom > targetRect.top && elementRect.left < targetRect.left + targetRect.width && elementRect.top < targetRect.top + targetRect.height;\n    }\n    return result;\n}\nfunction nodeListsHaveSameElements(list1, list2) {\n    if (!list1.length || !list2.length)\n        return false;\n    const set1 = new Set(list1);\n    const set2 = new Set(list2);\n    if (set1.size !== set2.size) {\n        return false;\n    }\n    for (const item of set1) {\n        if (!set2.has(item)) {\n            return false;\n        }\n    }\n    // console.log(list1+\' and \'+list2 + \' have same elements\');\n    return true;\n}\nfunction querySelectorAsync(selector_1) {\n    return __awaiter(this, arguments, void 0, function* (selector, scope = document, trial = 10, timeout = 200) {\n        let n = 0;\n        while (n < trial) {\n            const element = scope.querySelector(selector);\n            if (element)\n                return element;\n            yield new Promise((resolve) => setTimeout(resolve, timeout));\n            n++;\n        }\n        // throw new Error(\'querySelectorPromise failed\');\n    });\n}\nfunction querySelectorAllAsync(selector_1) {\n    return __awaiter(this, arguments, void 0, function* (selector, scope = document, trial = 10, timeout = 200) {\n        let n = 0;\n        while (n < trial) {\n            const elements = scope.querySelectorAll(selector);\n            if (elements.length > 0)\n                return elements;\n            yield new Promise((resolve) => setTimeout(resolve, timeout));\n            n++;\n        }\n        // throw new Error(\'querySelectorAllPromise failed\');\n    });\n}\nfunction isProtyle(docID) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        if (!docID) {\n            // 获取当前聚焦的文档\n            const focusedDocTab = yield querySelectorAsync(".layout__center .layout-tab-bar .item--focus");\n            docID = (_a = focusedDocTab === null || focusedDocTab === void 0 ? void 0 : focusedDocTab.getAttribute("data-id")) !== null && _a !== void 0 ? _a : undefined;\n        }\n        const curProtyle = document.querySelector(`.layout__center .layout-tab-container>[data-id="${docID}"]:not(.fn__none)`);\n        // console.log(docID, curProtyle);\n        if (!curProtyle)\n            return true;\n        return curProtyle.classList.contains("protyle");\n    });\n}\n\n\n//# sourceURL=webpack://asri/./src/util/misc.ts?')},"./src/util/observers.ts":(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.MOConfigForClassNames = exports.AsriMutationObserver = exports.AsriResizeObserver = void 0;\nclass AsriResizeObserver {\n    constructor(callback) {\n        this.callback = (entries, observer) => callback(entries, observer);\n        this.ro = new ResizeObserver(this.callback);\n    }\n    observe(target, options) {\n        this.ro.observe(target, options);\n    }\n    disconnect(callback) {\n        this.ro.disconnect();\n        if (callback)\n            callback();\n    }\n    unobserve(target) {\n        this.ro.unobserve(target);\n    }\n}\nexports.AsriResizeObserver = AsriResizeObserver;\nclass AsriMutationObserver {\n    constructor(callback) {\n        this.callback = (mutationList, observer) => callback(mutationList, observer);\n        this.mo = new MutationObserver(this.callback);\n    }\n    observe(target, options) {\n        this.mo.observe(target, options);\n    }\n    disconnect(callback) {\n        // const mutations = this.mo.takeRecords();\n        // if (mutations) {\n        //     this.callback(mutations, this.mo);\n        // }\n        this.mo.disconnect();\n        if (callback)\n            callback();\n    }\n}\nexports.AsriMutationObserver = AsriMutationObserver;\nexports.MOConfigForClassNames = {\n    attributes: true, // 监视属性变化\n    subtree: true, // 包含目标节点的后代节点\n    attributeFilter: ["class"], // 只关注"class"属性的变化\n    attributeOldValue: true,\n};\n\n\n//# sourceURL=webpack://asri/./src/util/observers.ts?')},"./src/util/rsc.ts":(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.environment = exports.asriDoms = void 0;\nconst ua = navigator.userAgent;\nlet _layouts = null;\nlet _layoutCenter = null;\nlet _toolbar = null;\nlet _dockL = null;\nlet _dockR = null;\nlet _dockB = null;\nlet _status = null;\nlet _layoutDockL = null;\nlet _layoutDockR = null;\nlet _layoutDockB = null;\nlet _barSync = null;\nlet _barForward = null;\nlet _toolbarVIP = null;\nlet _drag = null;\nlet _barPlugins = null;\nlet _barSearch = null;\nlet _barMode = null;\nlet _barMore = null;\nexports.asriDoms = {\n    get layouts() {\n        return (_layouts !== null && _layouts !== void 0 ? _layouts : (_layouts = document.getElementById("layouts")));\n    },\n    get layoutCenter() {\n        return (_layoutCenter !== null && _layoutCenter !== void 0 ? _layoutCenter : (_layoutCenter = document.querySelector(".layout__center")));\n    },\n    get toolbar() {\n        return (_toolbar !== null && _toolbar !== void 0 ? _toolbar : (_toolbar = document.getElementById("toolbar")));\n    },\n    get dockL() {\n        return (_dockL !== null && _dockL !== void 0 ? _dockL : (_dockL = document.getElementById("dockLeft")));\n    },\n    get dockR() {\n        return (_dockR !== null && _dockR !== void 0 ? _dockR : (_dockR = document.getElementById("dockRight")));\n    },\n    get dockB() {\n        return (_dockB !== null && _dockB !== void 0 ? _dockB : (_dockB = document.getElementById("dockBottom")));\n    },\n    get status() {\n        return (_status !== null && _status !== void 0 ? _status : (_status = document.getElementById("status")));\n    },\n    get layoutDockL() {\n        return (_layoutDockL !== null && _layoutDockL !== void 0 ? _layoutDockL : (_layoutDockL = document.querySelector(".layout__dockl")));\n    },\n    get layoutDockR() {\n        return (_layoutDockR !== null && _layoutDockR !== void 0 ? _layoutDockR : (_layoutDockR = document.querySelector(".layout__dockr")));\n    },\n    get layoutDockB() {\n        return (_layoutDockB !== null && _layoutDockB !== void 0 ? _layoutDockB : (_layoutDockB = document.querySelector(".layout__dockb")));\n    },\n    get barSync() {\n        return (_barSync !== null && _barSync !== void 0 ? _barSync : (_barSync = document.getElementById("barSync")));\n    },\n    get barForward() {\n        return (_barForward !== null && _barForward !== void 0 ? _barForward : (_barForward = document.getElementById("barForward")));\n    },\n    get toolbarVIP() {\n        return (_toolbarVIP !== null && _toolbarVIP !== void 0 ? _toolbarVIP : (_toolbarVIP = document.getElementById("toolbarVIP")));\n    },\n    get drag() {\n        return (_drag !== null && _drag !== void 0 ? _drag : (_drag = document.getElementById("drag")));\n    },\n    get barPlugins() {\n        return (_barPlugins !== null && _barPlugins !== void 0 ? _barPlugins : (_barPlugins = document.getElementById("barPlugins")));\n    },\n    get barSearch() {\n        return (_barSearch !== null && _barSearch !== void 0 ? _barSearch : (_barSearch = document.getElementById("barSearch")));\n    },\n    get barMode() {\n        return (_barMode !== null && _barMode !== void 0 ? _barMode : (_barMode = document.getElementById("barMode")));\n    },\n    get barMore() {\n        return (_barMore !== null && _barMore !== void 0 ? _barMore : (_barMore = document.getElementById("barMore")));\n    },\n};\nexports.environment = {\n    isMacOS: navigator.platform.indexOf("Mac") > -1,\n    isLinux: navigator.platform.indexOf("Linux") > -1,\n    isAndroid: /Android/.test(ua),\n    isMobile: !!document.getElementById("sidebar"),\n    isInBrowser: !ua.startsWith("SiYuan") || ua.indexOf("iPad") > -1 || (/Android/.test(ua) && !/(?:Mobile)/.test(ua)), // tablets use this too\n    isMiniWindow: document.body.classList.contains("body--window"),\n    isIOSApp: (/iOS/i.test(ua) || /iPad/i.test(ua)) && /AppleWebKit/i.test(ua) && ua.startsWith("SiYuan/"),\n    lang: window.siyuan.config.lang,\n    supportOklch: CSS.supports("color", "oklch(from red calc(l * 0.5) 0 h)"),\n    isReadOnly: window.siyuan.config.readonly,\n    appSchemeMode: window.siyuan.config.appearance.mode > 0 ? "dark" : "light",\n    isSafari: /^((?!chrome|android).)*safari/i.test(ua),\n};\n\n\n//# sourceURL=webpack://asri/./src/util/rsc.ts?')},"@electron/remote":e=>{e.exports=require("@electron/remote")}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(t.exports,t,t.exports,__webpack_require__),t.exports}var __webpack_exports__=__webpack_require__("./src/main.ts")})();